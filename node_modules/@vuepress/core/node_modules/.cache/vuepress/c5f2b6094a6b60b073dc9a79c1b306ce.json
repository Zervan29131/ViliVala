{"remainingRequest":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zervan/GitHub/ViliVala/vilivala/components/BodyBgImg.vue?vue&type=style&index=0&lang=stylus&","dependencies":[{"path":"/Users/zervan/GitHub/ViliVala/vilivala/components/BodyBgImg.vue","mtime":1675328261652},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/css-loader/dist/cjs.js","mtime":1675328258839},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1675328261461},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/postcss-loader/src/index.js","mtime":1675328260665},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/stylus-loader/index.js","mtime":1675328261306},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js","mtime":1675328261461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYm9keS1iZwogIHBvc2l0aW9uIGZpeGVkCiAgbGVmdCAwCiAgdG9wIDAKICB6LWluZGV4IC05OTk5OTkKICBoZWlnaHQgMTAwdmgKICB3aWR0aCAxMDB2dwogIHRyYW5zaXRpb24gYmFja2dyb3VuZCAwLjVzCg=="},{"version":3,"sources":["BodyBgImg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BodyBgImg.vue","sourceRoot":"vilivala/components","sourcesContent":["<template>\n  <div\n    class=\"body-bg\"\n    :style=\"`background: url(${bgImg}) center center / cover no-repeat;opacity:${opacity}`\"\n  ></div>\n</template>\n\n<script>\nimport { type } from '../util'\nexport default {\n  data () {\n    return {\n      bgImg: '',\n      opacity: 0.5\n    }\n  },\n  mounted () {\n    let { bodyBgImg, bodyBgImgOpacity } = this.$themeConfig\n\n    if (type(bodyBgImg) === 'string') {\n      this.bgImg = bodyBgImg\n    } else if (type(bodyBgImg) === 'array') {\n      let count = 0\n      let timer = null\n\n      this.bgImg = bodyBgImg[count]\n      clearInterval(timer)\n      timer = setInterval(() => {\n        if (++count >= bodyBgImg.length) {\n          count = 0\n        }\n        this.bgImg = bodyBgImg[count]\n      }, 15000);\n    }\n\n    if (bodyBgImgOpacity !== undefined) {\n      this.opacity = bodyBgImgOpacity\n    }\n\n  }\n}\n</script>\n\n<style lang='stylus'>\n.body-bg\n  position fixed\n  left 0\n  top 0\n  z-index -999999\n  height 100vh\n  width 100vw\n  transition background 0.5s\n</style>\n"]}]}