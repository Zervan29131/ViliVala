{"remainingRequest":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/mac/Documents/GitHub/vilivala2.0/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/GitHub/vilivala2.0/vilivala/components/Home.vue?vue&type=template&id=4a27e3b2&scoped=true&","dependencies":[{"path":"/Users/mac/Documents/GitHub/vilivala2.0/vilivala/components/Home.vue","mtime":1656426968339},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/cache-loader/dist/cjs.js","mtime":1651677591141},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1651677591405},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/cache-loader/dist/cjs.js","mtime":1651677591141},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/index.js","mtime":1651677591276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}