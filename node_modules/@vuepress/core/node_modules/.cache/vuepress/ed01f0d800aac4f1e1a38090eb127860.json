{"remainingRequest":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/zervan/GitHub/ViliVala/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/zervan/GitHub/ViliVala/docs/01.code/07.版本控制与管理/01.博客开发指南/05.静态Blog的theme开发.md?vue&type=template&id=09dd68b8&","dependencies":[{"path":"/Users/zervan/GitHub/ViliVala/docs/01.code/07.版本控制与管理/01.博客开发指南/05.静态Blog的theme开发.md","mtime":1676097750217},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1675328261461},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js","mtime":1675328261461},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/@vuepress/markdown-loader/index.js","mtime":1675328258220}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function () {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "ContentSlotsDistributor",
    { attrs: { "slot-key": _vm.$parent.slotKey } },
    [
      _c("h2", { attrs: { id: "安装hexo" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#安装hexo" } },
          [_vm._v("#")]
        ),
        _vm._v(" 安装hexo"),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _vm._v(
            "Hexo是基于node.js制作的一个博客工具。它是一个静态页面生成和上传的工具。"
          ),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "工作原理" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#工作原理" } },
          [_vm._v("#")]
        ),
        _vm._v(" 工作原理"),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [
          _vm._v(
            "Hexo在本地安装，不需要部署到我们的服务器上。我们只需要在本地通过markdown编写文章，然后让Hexo帮我们生成静态的html页面，并通过Hexo将生成的html文件上传到我们的服务器。"
          ),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在本地计算机搭建Hexo环境，Hexo通过generate命令将*.md文件渲染成静态的html页面，然后Hexo通过deploy命令触发git用户通过公钥免密登陆服务器，进而将静态页面推送到服务器的git仓库（repository）中。然后，服务器再通过钩子（git-hooks） 将静态页面checkout到网站的根目录下，进而实现博客的自动部署。"
        ),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "搭建hexo" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#搭建hexo" } },
          [_vm._v("#")]
        ),
        _vm._v(" 搭建Hexo"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("在合适的地方新建MyHexoBlogs文件夹用来存放个人博客文件。"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("在该目录下右键点击"),
        _c("code", [_vm._v("Git Bash Here")]),
        _vm._v(
          "，打开git的控制台窗口，之后我们所有的操作都在git控制台进行，不要用Windows自带的控制台。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "定位到该目录下，输入下列代码安装Hexo。会有几个报错，无视它就行。安装命令如下："
        ),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("npm install -g hexo-cli\n")]),
        ]),
      ]),
      _c("p", [_vm._v("运行结果如下：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              'tangc1QLAPTOP -77R73J8L MINGN64 /d/MyHexoBlogs\n$ npm install -g hexo-c1\nc: Users tangc1\\AppData Roaming\\npm\\hexo -> C: users tangc1AppDa ta Roaming \\npm\\node modul es \\hexo-cli \\bin\\hexo\nnpm WARN optional SKIPPING OPTIONAL DEPENDENCY\nY: fsevents@2.1.2 (node modu 1 es \\hexo-c 1i node modu 1 es fsevents) :\nnpm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fseventsQ2.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"win32", "arch":"x64"})\n\n+ hexo-c1i@3.1.0\nupdated 1 package in 21. 643s\n'
            ),
          ]),
        ]),
      ]),
      _c("p", [
        _vm._v("Hexo安装完成后，输入"),
        _c("code", [_vm._v("hexo -v")]),
        _vm._v("验证是否安装成功。"),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "初始化项目" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#初始化项目" } },
          [_vm._v("#")]
        ),
        _vm._v(" 初始化项目"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("在MyBlogs文件夹下新建mysite项目，并对其进行初始化。")]),
      _vm._v(" "),
      _c("p", [
        _vm._v("输入"),
        _c("code", [_vm._v("hexo init")]),
        _vm._v("初始化文件夹，"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("hexo init mysite\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("输入"),
        _c("code", [_vm._v("cd")]),
        _vm._v("进入文件夹，"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("cd mysite\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("接着输入"),
        _c("code", [_vm._v("npm install")]),
        _vm._v("安装必备的组件。"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("npm install\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v(
          "此时，会在MyBlogs文件夹下新建mysite文件夹，并在其内部生成相应的项目文件。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "这样mysite文件夹下就会出现 Hexo 的初始化文件，包括 themes、scaffolds、source 等文件夹。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "接下来我们首先进入新生成的文件夹里面，然后调用 Hexo 的 generate 命令，将 Hexo 编译生成 HTML 代码，命令如下："
        ),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("hexo generate\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v(
          "可以看到输出结果里面包含了 js、css、font 等内容，并发现他们都处在了项目根目录下的 public 文件夹下面了。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "然后我们利用 Hexo 提供的 serve 命令把博客在本地运行起来，命令如下："
        ),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("hexo serve\n")]),
        ]),
      ]),
      _c("p", [_vm._v("运行之后命令行输出如下：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language-text extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "INFO  Start processing\nINFO  Hexois running at http://localhost:4000 . Press Ctrl+C to stop \n"
            ),
          ]),
        ]),
      ]),
      _c("p", [
        _vm._v(
          "此时在本地打开浏览器，通过http://localhost:4000便可访问基于Hexo的个人博客主页了。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("这样一个博客的框架就出来了。")]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "初始化" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#初始化" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 初始化"),
      ]),
      _vm._v(" "),
      _c("ol", [
        _c("li", [_vm._v("创建并进入一个新目录")]),
        _vm._v(" "),
        _c("li", [_vm._v("使用包管理器进行初始化")]),
        _vm._v(" "),
        _c("li", [_vm._v("安装全局依赖")]),
        _vm._v(" "),
        _c("li", [_vm._v("创建你的第一篇文档")]),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "npm install -g vuepress \nor\nnpm install -g hexo-cli\nnpm init\nmkdir docs && echo '# Hello VuePress' > docs/README.md\n"
            ),
          ]),
        ]),
      ]),
      _c("ol", { attrs: { start: "5" } }, [
        _c("li", [
          _vm._v("在 "),
          _c("code", [_vm._v("package.json")]),
          _vm._v(" 中添加一些scripts"),
        ]),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-json extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-json" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{"),
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token property" } }, [
              _vm._v('"scripts"'),
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(":"),
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("{"),
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token property" } }, [
              _vm._v('"docs:dev"'),
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(":"),
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"vuepress dev docs"'),
            ]),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v(","),
            ]),
            _vm._v("\n    "),
            _c("span", { pre: true, attrs: { class: "token property" } }, [
              _vm._v('"docs:build"'),
            ]),
            _c("span", { pre: true, attrs: { class: "token operator" } }, [
              _vm._v(":"),
            ]),
            _vm._v(" "),
            _c("span", { pre: true, attrs: { class: "token string" } }, [
              _vm._v('"vuepress build docs"'),
            ]),
            _vm._v("\n  "),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}"),
            ]),
            _vm._v("\n"),
            _c("span", { pre: true, attrs: { class: "token punctuation" } }, [
              _vm._v("}"),
            ]),
            _vm._v("\n"),
          ]),
        ]),
      ]),
      _c("ol", { attrs: { start: "6" } }, [
        _c("li", [_vm._v("在本地启动服务器")]),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language-bash extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-bash" } }, [
          _c("code", [
            _c("span", { pre: true, attrs: { class: "token function" } }, [
              _vm._v("npm"),
            ]),
            _vm._v(" run docs:dev\n"),
          ]),
        ]),
      ]),
      _c("p", [
        _vm._v(
          "VuePress 会在 http://localhost:8080启动一个热重载的开发服务器。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("现在，你应该已经有了一个简单可用的 VuePress 文档。")]),
      _vm._v(" "),
      _c("p", [_vm._v("新建完成后，指定文件夹的目录如下：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              ".\n├── _config.yml\n├── package.json\n├── scaffolds\n├── source\n|   ├── _drafts\n|   └── _posts\n└── themes\n"
            ),
          ]),
        ]),
      ]),
      _c("h3", { attrs: { id: "config-yml" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#config-yml" } },
          [_vm._v("#")]
        ),
        _vm._v(" _config.yml"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("网站的配置信息，您可以在此配置大部分的参数。")]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "scaffolds" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#scaffolds" } },
          [_vm._v("#")]
        ),
        _vm._v(" scaffolds"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "Hexo的模板是指在新建的文章文件中默认填充的内容。例如，如果您修改scaffold/post.md中的Front-matter内容，那么每次新建一篇文章时都会包含这个修改。"
        ),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "source" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#source" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" source"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("资源文件夹是存放用户资源的地方。除 "),
        _c("code", [_vm._v("_posts")]),
        _vm._v(" 文件夹之外，开头命名为 "),
        _c("code", [_vm._v("_")]),
        _vm._v(
          " (下划线)的文件 / 文件夹和隐藏的文件将会被忽略。Markdown 和 HTML 文件会被解析并放到 "
        ),
        _c("code", [_vm._v("public")]),
        _vm._v(" 文件夹，而其他文件会被拷贝过去。"),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "themes" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#themes" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" themes"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("主题文件夹。Hexo 会根据主题来生成静态页面。")]),
      _vm._v(" "),
      _c("h1", { attrs: { id: "配置" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#配置" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 配置"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("您可以在 "),
        _c("code", [_vm._v("_config.yml")]),
        _vm._v(" 中修改大部分的配置。"),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "网站" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#网站" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 网站"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("title")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站标题"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("subtitle")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站副标题"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("description")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站描述"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("keywords")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站的关键词。支持多个关键词。"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("author")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("作者"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("language")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站使用的语言 "),
              _c("code", [_vm._v("zh-CN")]),
              _vm._v("。"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("timezone")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v(
                "网站时区。Hexo 默认使用您电脑的时区。对于中国大陆地区可以使用 "
              ),
              _c("code", [_vm._v("Asia/Shanghai")]),
              _vm._v("。"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "网址" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#网址" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 网址"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("url")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网址, 必须以 "),
              _c("code", [_vm._v("http://")]),
              _vm._v(" 或 "),
              _c("code", [_vm._v("https://")]),
              _vm._v(" 开头"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("root")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("网站根目录"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("url's pathname")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("permalink")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("文章的 永久链接 格式"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":year/:month/:day/:title/")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("permalink_defaults")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("永久链接中各部分的默认值"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("pretty_urls")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("改写 permalink 的值来美化 URL"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("pretty_urls.trailing_index")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("是否在永久链接中保留尾部的 "),
              _c("code", [_vm._v("index.html")]),
              _vm._v("，设置为 "),
              _c("code", [_vm._v("false")]),
              _vm._v(" 时去除"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("true")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("pretty_urls.trailing_html")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("是否在永久链接中保留尾部的 "),
              _c("code", [_vm._v(".html")]),
              _vm._v(", 设置为 "),
              _c("code", [_vm._v("false")]),
              _vm._v(" 时去除 ("),
              _c("em", [
                _vm._v("对尾部的 "),
                _c("code", [_vm._v("index.html")]),
                _vm._v("无效"),
              ]),
              _vm._v(")"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("true")]),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [_vm._v("网站存放在子目录")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("如果您的网站存放在子目录中，例如 "),
          _c("code", [_vm._v("http://example.com/blog")]),
          _vm._v("，则请将您的 "),
          _c("code", [_vm._v("url")]),
          _vm._v(" 设为 "),
          _c("code", [_vm._v("http://example.com/blog")]),
          _vm._v(" 并把 "),
          _c("code", [_vm._v("root")]),
          _vm._v(" 设为 "),
          _c("code", [_vm._v("/blog/")]),
          _vm._v("。"),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("例如：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "# 比如，一个页面的永久链接是 http://example.com/foo/bar/index.html\npretty_urls:\n  trailing_index: false\n# 此时页面的永久链接会变为 http://example.com/foo/bar/\n"
            ),
          ]),
        ]),
      ]),
      _c("h2", { attrs: { id: "目录" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#目录" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 目录"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("source_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("资源文件夹，这个文件夹用来存放内容。"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("source")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("public_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("公共文件夹，这个文件夹用于存放生成的站点文件。"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("public")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("tag_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("标签文件夹"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("tags")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("archive_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("归档文件夹"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("archives")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("category_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("分类文件夹"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("categories")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("code_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("Include code 文件夹，"),
              _c("code", [_vm._v("source_dir")]),
              _vm._v(" 下的子目录"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("downloads/code")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("i18n_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("国际化（i18n）文件夹"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":lang")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("skip_render")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到 "),
              _c("code", [_vm._v("public")]),
              _vm._v(" 目录中。您可使用 glob 表达式来匹配路径。"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("例如：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "skip_render: \"mypage/**/*\"\n# 将会直接将 `source/mypage/index.html` 和 `source/mypage/code.js` 不做改动地输出到 'public' 目录\n# 你也可以用这种方法来跳过对指定文章文件的渲染\nskip_render: \"_posts/test-post.md\"\n# 这将会忽略对 'test-post.md' 的渲染\n"
            ),
          ]),
        ]),
      ]),
      _c("blockquote", [
        _c("p", [_vm._v("提示")]),
        _vm._v(" "),
        _c("p", [
          _vm._v("如果您刚刚开始接触 Hexo，通常没有必要修改这一部分的值。"),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "文章" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#文章" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 文章"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("new_post_name")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("新文章的文件名称"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v(":title.md"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("default_layout")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("预设布局"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("post"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("auto_spacing")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("在中文和英文之间加入空格"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("false"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("titlecase")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("把标题转换为 title case"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("false"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("external_link")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("在新标签中打开链接"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("true"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("external_link.enable")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("在新标签中打开链接"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("true")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("external_link.field")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("对整个网站（"),
              _c("code", [_vm._v("site")]),
              _vm._v("）生效或仅对文章（"),
              _c("code", [_vm._v("post")]),
              _vm._v("）生效"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("site")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("external_link.exclude")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("需要排除的域名。主域名和子域名如 "),
              _c("code", [_vm._v("www")]),
              _vm._v(" 需分别配置"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("[]")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("filename_case")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("把文件名称转换为 (1) 小写或 (2) 大写"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [_vm._v("0")]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("render_drafts")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("显示草稿"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("false"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("post_asset_folder")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("启动 Asset 文件夹"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("false"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("relative_link")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("把链接改为与根目录的相对位址"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("false"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("future")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("显示未来的文章"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("true"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("highlight")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("代码块的设置, 请参考 Highlight.js进行设置"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("prismjs")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("代码块的设置, 请参考 PrismJS进行设置"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [_vm._v("相对地址")]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "默认情况下，Hexo 生成的超链接都是绝对地址。例如，如果您的网站域名为 "
          ),
          _c("code", [_vm._v("example.com")]),
          _vm._v(",您有一篇文章名为 "),
          _c("code", [_vm._v("hello")]),
          _vm._v("，那么绝对链接可能像这样："),
          _c("code", [_vm._v("http://example.com/hello.html")]),
          _vm._v("，它是"),
          _c("strong", [_vm._v("绝对")]),
          _vm._v("于域名的。相对链接像这样："),
          _c("code", [_vm._v("/hello.html")]),
          _vm._v(
            "，也就是说，无论用什么域名访问该站点，都没有关系，这在进行反向代理时可能用到。通常情况下，建议使用绝对地址。"
          ),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "分类-标签" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#分类-标签" } },
          [_vm._v("#")]
        ),
        _vm._v(" 分类 & 标签"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("default_category")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认分类"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("uncategorized")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("category_map")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("分类别名"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("tag_map")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("标签别名"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "日期-时间格式" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#日期-时间格式" } },
          [_vm._v("#")]
        ),
        _vm._v(" 日期 / 时间格式"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("Hexo 使用 Moment.js 来解析和显示时间。")]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("date_format")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("日期格式"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("YYYY-MM-DD")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("time_format")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("时间格式"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("HH:mm:ss")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("updated_option")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("当 Front Matter 中没有指定 "),
              _c(
                "a",
                {
                  attrs: {
                    href: "https://hexo.io/zh-cn/docs/variables#%E9%A1%B5%E9%9D%A2%E5%8F%98%E9%87%8F",
                    target: "_blank",
                    rel: "noopener noreferrer",
                  },
                },
                [_c("code", [_vm._v("updated")]), _c("OutboundLink")],
                1
              ),
              _vm._v(" 时 "),
              _c("code", [_vm._v("updated")]),
              _vm._v(" 的取值"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("mtime")]),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [_vm._v("updated_option")]),
        _vm._v(" "),
        _c("p", [
          _c("code", [_vm._v("updated_option")]),
          _vm._v(" 控制了当 Front Matter 中没有指定 "),
          _c("code", [_vm._v("updated")]),
          _vm._v(" 时，"),
          _c("code", [_vm._v("updated")]),
          _vm._v(" 如何取值："),
        ]),
        _vm._v(" "),
        _c("ul", [
          _c("li", [
            _c("code", [_vm._v("mtime")]),
            _vm._v(
              ": 使用文件的最后修改时间。这是从 Hexo 3.0.0 开始的默认行为。"
            ),
          ]),
          _vm._v(" "),
          _c("li", [
            _c("code", [_vm._v("date")]),
            _vm._v(": 使用 "),
            _c("code", [_vm._v("date")]),
            _vm._v(" 作为 "),
            _c("code", [_vm._v("updated")]),
            _vm._v(
              " 的值。可被用于 Git 工作流之中，因为使用 Git 管理站点时，文件的最后修改日期常常会发生改变"
            ),
          ]),
          _vm._v(" "),
          _c("li", [
            _c("code", [_vm._v("empty")]),
            _vm._v(": 直接删除 "),
            _c("code", [_vm._v("updated")]),
            _vm._v("。使用这一选项可能会导致大部分主题和插件无法正常工作。"),
          ]),
        ]),
        _vm._v(" "),
        _c("p", [
          _c("code", [_vm._v("use_date_for_updated")]),
          _vm._v(" 选项已经被废弃，将会在下个重大版本发布时去除。请改为使用 "),
          _c("code", [_vm._v("updated_option: 'date'")]),
          _vm._v("。"),
        ]),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "use_date_for_updated` | 启用以后，如果 Front Matter 中没有指定 `updated`， [`post.updated`](https://hexo.io/zh-cn/docs/configuration) 将会使用 `date` 的值而不是文件的创建时间。在 Git 工作流中这个选项会很有用 | `true\n"
            ),
          ]),
        ]),
      ]),
      _c("h2", { attrs: { id: "分页" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#分页" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 分页"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("默认值"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("per_page")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("每页显示的文章量 (0 = 关闭分页功能)"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("10")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("pagination_dir")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("分页目录"),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("page")]),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "扩展" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#扩展" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 扩展"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("theme")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("当前主题名称。值为"),
              _c("code", [_vm._v("false")]),
              _vm._v("时禁用主题"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("theme_config")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("主题的配置文件。在这里放置的配置会覆盖主题目录下的 "),
              _c("code", [_vm._v("_config.yml")]),
              _vm._v(" 中的配置"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("deploy")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("部署部分的设置"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("meta_generator")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("Meta generator标签。 值为 "),
              _c("code", [_vm._v("false")]),
              _vm._v(" 时 Hexo 不会在头部插入该标签"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "包括或不包括目录和文件" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#包括或不包括目录和文件" },
          },
          [_vm._v("#")]
        ),
        _vm._v(" 包括或不包括目录和文件"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在 Hexo 配置文件中，通过设置 include/exclude 可以让 Hexo 进行处理或忽略某些目录和文件夹。你可以使用 glob 表达式对目录和文件进行匹配。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _c("code", [_vm._v("include")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("exclude")]),
        _vm._v(" 选项只会应用到 "),
        _c("code", [_vm._v("source/")]),
        _vm._v(" ，而 "),
        _c("code", [_vm._v("ignore")]),
        _vm._v(" 选项会应用到所有文件夹."),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("include")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("Hexo 默认会不包括 "),
              _c("code", [_vm._v("source/")]),
              _vm._v(" 下的文件和文件夹（包括名称以下划线和 "),
              _c("code", [_vm._v(".")]),
              _vm._v(" 开头的文件和文件夹，Hexo 的 "),
              _c("code", [_vm._v("_posts")]),
              _vm._v(" 和 "),
              _c("code", [_vm._v("_data")]),
              _vm._v(
                " 等目录除外）。通过设置此字段将使 Hexo 处理他们并将它们复制到 "
              ),
              _c("code", [_vm._v("source")]),
              _vm._v(" 目录下。"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("exclude")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("Hexo 不包括 "),
              _c("code", [_vm._v("source/")]),
              _vm._v(" 下的这些文件和目录"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("ignore")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("Hexo 会忽略整个 Hexo 项目下的这些文件夹或文件"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("举例：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "# 处理或不处理目录或文件\ninclude:\n  - \".nojekyll\"\n  # 处理 'source/css/_typing.css'\n  - \"css/_typing.css\"\n  # 处理 'source/_css/' 中的任何文件，但不包括子目录及其其中的文件。\n  - \"_css/*\"\n  # 处理 'source/_css/' 中的任何文件和子目录下的任何文件\n  - \"_css/**/*\"\n\nexclude:\n  # 不处理 'source/js/test.js'\n  - \"js/test.js\"\n  # 不处理 'source/js/' 中的文件、但包括子目录下的所有目录和文件\n  - \"js/*\"\n  # 不处理 'source/js/' 中的文件和子目录下的任何文件\n  - \"js/**/*\"\n  # 不处理 'source/js/' 目录下的所有文件名以 'test' 开头的文件，但包括其它文件和子目录下的单文件\n  - \"js/test*\"\n  # 不处理 'source/js/' 及其子目录中任何以 'test' 开头的文件\n  - \"js/**/test*\"\n  # 不要用 exclude 来忽略 'source/_posts/' 中的文件。你应该使用 'skip_render'，或者在要忽略的文件的文件名之前加一个下划线 '_'\n  # 在这里配置一个 - \"_posts/hello-world.md\" 是没有用的。\n\nignore:\n  # 忽略任何一个名叫 'foo' 的文件夹\n  - \"**/foo\"\n  # 只忽略 'themes/' 下的 'foo' 文件夹\n  - \"**/themes/*/foo\"\n  # 对 'themes/' 目录下的每个文件夹中忽略名叫 'foo' 的子文件夹\n  - \"**/themes/**/foo\"\n"
            ),
          ]),
        ]),
      ]),
      _c("p", [_vm._v("列表中的每一项都必须用单引号或双引号包裹起来。")]),
      _vm._v(" "),
      _c("p", [
        _c("code", [_vm._v("include")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("exclude")]),
        _vm._v(" 并不适用于 "),
        _c("code", [_vm._v("themes/")]),
        _vm._v(" 目录下的文件。如果需要忽略 "),
        _c("code", [_vm._v("themes/")]),
        _vm._v(" 目录下的部分文件或文件夹，可以使用 "),
        _c("code", [_vm._v("ignore")]),
        _vm._v(" 或在文件名之前添加下划线 "),
        _c("code", [_vm._v("_")]),
        _vm._v("。"),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "使用代替配置文件" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#使用代替配置文件" },
          },
          [_vm._v("#")]
        ),
        _vm._v(" 使用代替配置文件"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("可以在 hexo-cli 中使用 "),
        _c("code", [_vm._v("--config")]),
        _vm._v(
          " 参数来指定自定义配置文件的路径。你可以使用一个 YAML 或 JSON 文件的路径，也可以使用逗号分隔（无空格）的多个 YAML 或 JSON 文件的路径。例如："
        ),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              "# 用 'custom.yml' 代替 '_config.yml'\n$ hexo server --config custom.yml\n\n# 使用 'custom.yml' 和 'custom2.json'，优先使用 'custom3.yml'，然后是 'custom2.json'\n$ hexo generate --config custom.yml,custom2.json,custom3.yml\n"
            ),
          ]),
        ]),
      ]),
      _c("p", [
        _vm._v(
          "当你指定了多个配置文件以后，Hexo 会按顺序将这部分配置文件合并成一个 "
        ),
        _c("code", [_vm._v("_multiconfig.yml")]),
        _vm._v(
          "。如果遇到重复的配置，排在后面的文件的配置会覆盖排在前面的文件的配置。这个原则适用于任意数量、任意深度的 YAML 和 JSON 文件。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("例如，使用 "),
        _c("code", [_vm._v("--options")]),
        _vm._v(" 指定了两个自定义配置文件："),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v("$ hexo generate --config custom.yml,custom2.json\n"),
          ]),
        ]),
      ]),
      _c("p", [
        _vm._v("如果 "),
        _c("code", [_vm._v("custom.yml")]),
        _vm._v(" 中指定了 "),
        _c("code", [_vm._v("foo: bar")]),
        _vm._v("，在 custom2.json 中指定了 "),
        _c("code", [_vm._v('"foo": "dinosaur"')]),
        _vm._v("，那么在 "),
        _c("code", [_vm._v("_multiconfig.yml")]),
        _vm._v(" 中你会得到 "),
        _c("code", [_vm._v("foo: dinosaur")]),
        _vm._v("。"),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "使用代替主题配置文件" } }, [
        _c(
          "a",
          {
            staticClass: "header-anchor",
            attrs: { href: "#使用代替主题配置文件" },
          },
          [_vm._v("#")]
        ),
        _vm._v(" 使用代替主题配置文件"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("通常情况下，Hexo 主题是一个独立的项目，并拥有一个独立的 "),
        _c("code", [_vm._v("_config.yml")]),
        _vm._v(" 配置文件。"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "除了自行维护独立的主题配置文件，你也可以在其它地方对主题进行配置。"
        ),
      ]),
      _vm._v(" "),
      _c("p", [
        _c("strong", [
          _vm._v("配置文件中的 "),
          _c("code", [_vm._v("theme_config")]),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [_c("p", [_vm._v("该特性自 Hexo 2.8.2 起提供")])]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              '# _config.yml\ntheme: "my-theme"\ntheme_config:\n  bio: "My awesome bio"\n  foo:\n    bar: \'a\'\n# themes/my-theme/_config.yml\nbio: "Some generic bio"\nlogo: "a-cool-image.png"\n  foo:\n    baz: \'b\'\n'
            ),
          ]),
        ]),
      ]),
      _c("p", [_vm._v("最终主题配置的输出是：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              '{\n  bio: "My awesome bio",\n  logo: "a-cool-image.png",\n  foo: {\n    bar: "a",\n    baz: "b"\n  }\n}\n'
            ),
          ]),
        ]),
      ]),
      _c("p", [
        _c("strong", [
          _vm._v("独立的 "),
          _c("code", [_vm._v("_config.[theme].yml")]),
          _vm._v(" 文件"),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [_c("p", [_vm._v("该特性自 Hexo 5.0.0 起提供")])]),
      _vm._v(" "),
      _c("p", [
        _vm._v("独立的主题配置文件应放置于站点根目录下，支持 "),
        _c("code", [_vm._v("yml")]),
        _vm._v(" 或 "),
        _c("code", [_vm._v("json")]),
        _vm._v(" 格式。需要配置站点 "),
        _c("code", [_vm._v("_config.yml")]),
        _vm._v(" 文件中的 "),
        _c("code", [_vm._v("theme")]),
        _vm._v(" 以供 Hexo 寻找 "),
        _c("code", [_vm._v("_config.[theme].yml")]),
        _vm._v(" 文件。"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              '# _config.yml\ntheme: "my-theme"\n# _config.my-theme.yml\nbio: "My awesome bio"\nfoo:\n  bar: \'a\'\n# themes/my-theme/_config.yml\nbio: "Some generic bio"\nlogo: "a-cool-image.png"\n  foo:\n    baz: \'b\'\n'
            ),
          ]),
        ]),
      ]),
      _c("p", [_vm._v("最终主题配置的输出是：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [
            _vm._v(
              '{\n  bio: "My awesome bio",\n  logo: "a-cool-image.png",\n  foo: {\n    bar: "a",\n    baz: "b"\n  }\n}\n'
            ),
          ]),
        ]),
      ]),
      _c("blockquote", [
        _c("p", [
          _vm._v(
            "我们强烈建议你将所有的主题配置集中在一处。如果你不得不在多处配置你的主题，那么这些信息对你将会非常有用：Hexo 在合并主题配置时，Hexo 配置文件中的 "
          ),
          _c("code", [_vm._v("theme_config")]),
          _vm._v(" 的优先级最高，其次是 "),
          _c("code", [_vm._v("_config.[theme].yml")]),
          _vm._v(" 文件，最后是位于主题目录下的 "),
          _c("code", [_vm._v("_config.yml")]),
          _vm._v(" 文件。"),
        ]),
      ]),
      _vm._v(" "),
      _c("h1", { attrs: { id: "指令" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#指令" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 指令"),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "init" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#init" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" init"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo init [folder]\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("新建一个网站。如果没有设置 "),
        _c("code", [_vm._v("folder")]),
        _vm._v(" ，Hexo 默认在目前的文件夹建立网站。"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("本命令相当于执行了以下几步：")]),
      _vm._v(" "),
      _c("ol", [
        _c("li", [
          _vm._v(
            "Git clone hexo-starter和 hexo-theme-landscape主题到当前目录或指定目录。"
          ),
        ]),
        _vm._v(" "),
        _c("li", [
          _vm._v("使用 "),
          _c(
            "a",
            {
              attrs: {
                href: "https://classic.yarnpkg.com/lang/en/",
                target: "_blank",
                rel: "noopener noreferrer",
              },
            },
            [_vm._v("Yarn 1"), _c("OutboundLink")],
            1
          ),
          _vm._v("、"),
          _c(
            "a",
            {
              attrs: {
                href: "https://pnpm.js.org/",
                target: "_blank",
                rel: "noopener noreferrer",
              },
            },
            [_vm._v("pnpm"), _c("OutboundLink")],
            1
          ),
          _vm._v(" 或 "),
          _c(
            "a",
            {
              attrs: {
                href: "https://docs.npmjs.com/cli/install",
                target: "_blank",
                rel: "noopener noreferrer",
              },
            },
            [_vm._v("npm"), _c("OutboundLink")],
            1
          ),
          _vm._v(
            " 包管理器下载依赖（如有已安装多个，则列在前面的优先）。npm 默认随 "
          ),
          _c(
            "a",
            {
              attrs: {
                href: "https://hexo.io/docs/#Install-Node-js",
                target: "_blank",
                rel: "noopener noreferrer",
              },
            },
            [_vm._v("Node.js"), _c("OutboundLink")],
            1
          ),
          _vm._v(" 安装。"),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "new" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#new" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" new"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo new [layout] <title>\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("新建一篇文章。如果没有设置 "),
        _c("code", [_vm._v("layout")]),
        _vm._v(" 的话，默认使用 "),
        _c(
          "a",
          {
            attrs: {
              href: "https://hexo.io/zh-cn/docs/configuration",
              target: "_blank",
              rel: "noopener noreferrer",
            },
          },
          [_vm._v("_config.yml"), _c("OutboundLink")],
          1
        ),
        _vm._v(" 中的 "),
        _c("code", [_vm._v("default_layout")]),
        _vm._v(" 参数代替。如果标题包含空格的话，请使用引号括起来。"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v('$ hexo new "post title with whitespace"\n')]),
        ]),
      ]),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-p")]),
              _vm._v(", "),
              _c("code", [_vm._v("--path")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("自定义新文章的路径"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-r")]),
              _vm._v(", "),
              _c("code", [_vm._v("--replace")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("如果存在同名文章，将其替换"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-s")]),
              _vm._v(", "),
              _c("code", [_vm._v("--slug")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("文章的 Slug，作为新文章的文件名和发布后的 URL"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "默认情况下，Hexo 会使用文章的标题来决定文章文件的路径。对于独立页面来说，Hexo 会创建一个以标题为名字的目录，并在目录中放置一个 "
        ),
        _c("code", [_vm._v("index.md")]),
        _vm._v(" 文件。你可以使用 "),
        _c("code", [_vm._v("--path")]),
        _vm._v(" 参数来覆盖上述行为、自行决定文件的目录："),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v('hexo new page --path about/me "About me"\n')]),
        ]),
      ]),
      _c("p", [
        _vm._v("以上命令会创建一个 "),
        _c("code", [_vm._v("source/about/me.md")]),
        _vm._v(" 文件，同时 Front Matter 中的 title 为 "),
        _c("code", [_vm._v('"About me"')]),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("注意！title 是必须指定的！如果你这么做并不能达到你的目的："),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("hexo new page --path about/me\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("此时 Hexo 会创建 "),
        _c("code", [_vm._v("source/_posts/about/me.md")]),
        _vm._v("，同时 "),
        _c("code", [_vm._v("me.md")]),
        _vm._v(" 的 Front Matter 中的 title 为 "),
        _c("code", [_vm._v('"page"')]),
        _vm._v("。这是因为在上述命令中，hexo-cli 将 "),
        _c("code", [_vm._v("page")]),
        _vm._v(" 视为指定文章的标题、并采用默认的 "),
        _c("code", [_vm._v("layout")]),
        _vm._v("。"),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "generate" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#generate" } },
          [_vm._v("#")]
        ),
        _vm._v(" generate"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo generate\n")]),
        ]),
      ]),
      _c("p", [_vm._v("生成静态文件。")]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("选项"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-d")]),
              _vm._v(", "),
              _c("code", [_vm._v("--deploy")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("文件生成后立即部署网站"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-w")]),
              _vm._v(", "),
              _c("code", [_vm._v("--watch")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("监视文件变动"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-b")]),
              _vm._v(", "),
              _c("code", [_vm._v("--bail")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("生成过程中如果发生任何未处理的异常则抛出异常"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-f")]),
              _vm._v(", "),
              _c("code", [_vm._v("--force")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("强制重新生成文件 Hexo 引入了差分机制，如果 "),
              _c("code", [_vm._v("public")]),
              _vm._v(" 目录存在，那么 "),
              _c("code", [_vm._v("hexo g")]),
              _vm._v(" 只会重新生成改动的文件。 使用该参数的效果接近 "),
              _c("code", [_vm._v("hexo clean && hexo generate")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-c")]),
              _vm._v(", "),
              _c("code", [_vm._v("--concurrency")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("最大同时生成文件的数量，默认无限制"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("该命令可以简写为")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo g\n")]),
        ]),
      ]),
      _c("h2", { attrs: { id: "publish" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#publish" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" publish"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo publish [layout] <filename>\n")]),
        ]),
      ]),
      _c("p", [_vm._v("发表草稿。")]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "server" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#server" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" server"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo server\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("启动服务器。默认情况下，访问网址为： "),
        _c("code", [_vm._v("http://localhost:4000/")]),
        _vm._v("。"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("选项"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-p")]),
              _vm._v(", "),
              _c("code", [_vm._v("--port")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("重设端口"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-s")]),
              _vm._v(", "),
              _c("code", [_vm._v("--static")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("只使用静态文件"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-l")]),
              _vm._v(", "),
              _c("code", [_vm._v("--log")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("启动日记记录，使用覆盖记录格式"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "deploy" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#deploy" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" deploy"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo deploy\n")]),
        ]),
      ]),
      _c("p", [_vm._v("部署网站。")]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-g")]),
              _vm._v(", "),
              _c("code", [_vm._v("--generate")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("部署之前预先生成静态文件"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("该命令可以简写为：")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo d\n")]),
        ]),
      ]),
      _c("h2", { attrs: { id: "render" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#render" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" render"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo render <file1> [file2] ...\n")]),
        ]),
      ]),
      _c("p", [_vm._v("渲染文件。")]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("参数"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("-o")]),
              _vm._v(", "),
              _c("code", [_vm._v("--output")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("设置输出路径"),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "migrate" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#migrate" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" migrate"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo migrate <type>\n")]),
        ]),
      ]),
      _c("p", [_vm._v("从其他博客系统 迁移内容。")]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "clean" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#clean" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" clean"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo clean\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("清除缓存文件 ("),
        _c("code", [_vm._v("db.json")]),
        _vm._v(") 和已生成的静态文件 ("),
        _c("code", [_vm._v("public")]),
        _vm._v(")。"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v(
          "在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。"
        ),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "list" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#list" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" list"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo list <type>\n")]),
        ]),
      ]),
      _c("p", [_vm._v("列出网站资料。")]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "version" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#version" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" version"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo version\n")]),
        ]),
      ]),
      _c("p", [_vm._v("显示 Hexo 版本。")]),
      _vm._v(" "),
      _c("h1", { attrs: { id: "写作" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#写作" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 写作"),
      ]),
      _vm._v(" "),
      _c("p", [_vm._v("你可以执行下列命令来创建一篇新文章或者新的页面。")]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo new [layout] <title>\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("您可以在命令中指定文章的布局（layout），默认为 "),
        _c("code", [_vm._v("post")]),
        _vm._v("，可以通过修改 "),
        _c("code", [_vm._v("_config.yml")]),
        _vm._v(" 中的 "),
        _c("code", [_vm._v("default_layout")]),
        _vm._v(" 参数来指定默认布局。"),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "布局-layout" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#布局-layout" } },
          [_vm._v("#")]
        ),
        _vm._v(" 布局（Layout）"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("Hexo 有三种默认布局："),
        _c("code", [_vm._v("post")]),
        _vm._v("、"),
        _c("code", [_vm._v("page")]),
        _vm._v(" 和 "),
        _c("code", [_vm._v("draft")]),
        _vm._v(
          "。在创建这三种不同类型的文件时，它们将会被保存到不同的路径；而您自定义的其他布局和 "
        ),
        _c("code", [_vm._v("post")]),
        _vm._v(" 相同，都将储存到 "),
        _c("code", [_vm._v("source/_posts")]),
        _vm._v(" 文件夹。"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("布局"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("路径"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("post")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("source/_posts")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("page")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("source")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("draft")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("source/_drafts")]),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("blockquote", [
        _c("p", [_vm._v("Disabling layout")]),
        _vm._v(" "),
        _c("p", [
          _vm._v(
            "If you don’t want an article (post/page) to be processed with a theme, set "
          ),
          _c("code", [_vm._v("layout: false")]),
          _vm._v(" in its front-matter. Refer to "),
          _c(
            "a",
            {
              attrs: {
                href: "https://hexo.io/zh-cn/docs/front-matter#%E5%B8%83%E5%B1%80",
                target: "_blank",
                rel: "noopener noreferrer",
              },
            },
            [_vm._v("this section"), _c("OutboundLink")],
            1
          ),
          _vm._v(" for more details."),
        ]),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "文件名称" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#文件名称" } },
          [_vm._v("#")]
        ),
        _vm._v(" 文件名称"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("Hexo 默认以标题做为文件名称，但您可编辑 "),
        _c("code", [_vm._v("new_post_name")]),
        _vm._v(" 参数来改变默认的文件名称，举例来说，设为 "),
        _c("code", [_vm._v(":year-:month-:day-:title.md")]),
        _vm._v(" 可让您更方便的通过日期来管理文章。"),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("变量"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":title")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("标题（小写，空格将会被替换为短杠）"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":year")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("建立的年份，比如， "),
              _c("code", [_vm._v("2015")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":month")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("建立的月份（有前导零），比如， "),
              _c("code", [_vm._v("04")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":i_month")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("建立的月份（无前导零），比如， "),
              _c("code", [_vm._v("4")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":day")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("建立的日期（有前导零），比如， "),
              _c("code", [_vm._v("07")]),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v(":i_day")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("建立的日期（无前导零），比如， "),
              _c("code", [_vm._v("7")]),
            ]),
          ]),
        ]),
      ]),
      _vm._v(" "),
      _c("h3", { attrs: { id: "草稿" } }, [
        _c("a", { staticClass: "header-anchor", attrs: { href: "#草稿" } }, [
          _vm._v("#"),
        ]),
        _vm._v(" 草稿"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("刚刚提到了 Hexo 的一种特殊布局："),
        _c("code", [_vm._v("draft")]),
        _vm._v("，这种布局在建立时会被保存到 "),
        _c("code", [_vm._v("source/_drafts")]),
        _vm._v(" 文件夹，您可通过 "),
        _c("code", [_vm._v("publish")]),
        _vm._v(" 命令将草稿移动到 "),
        _c("code", [_vm._v("source/_posts")]),
        _vm._v(" 文件夹，该命令的使用方式与 "),
        _c("code", [_vm._v("new")]),
        _vm._v(" 十分类似，您也可在命令中指定 "),
        _c("code", [_vm._v("layout")]),
        _vm._v(" 来指定布局。"),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v("$ hexo publish [layout] <title>\n")]),
        ]),
      ]),
      _c("p", [
        _vm._v("草稿默认不会显示在页面中，您可在执行时加上 "),
        _c("code", [_vm._v("--draft")]),
        _vm._v(" 参数，或是把 "),
        _c("code", [_vm._v("render_drafts")]),
        _vm._v(" 参数设为 "),
        _c("code", [_vm._v("true")]),
        _vm._v(" 来预览草稿。"),
      ]),
      _vm._v(" "),
      _c("h2", { attrs: { id: "模版-scaffold" } }, [
        _c(
          "a",
          { staticClass: "header-anchor", attrs: { href: "#模版-scaffold" } },
          [_vm._v("#")]
        ),
        _vm._v(" 模版（Scaffold）"),
      ]),
      _vm._v(" "),
      _c("p", [
        _vm._v("在新建文章时，Hexo 会根据 "),
        _c("code", [_vm._v("scaffolds")]),
        _vm._v(" 文件夹内相对应的文件来建立文件，例如："),
      ]),
      _vm._v(" "),
      _c("div", { staticClass: "language- extra-class" }, [
        _c("pre", { pre: true, attrs: { class: "language-text" } }, [
          _c("code", [_vm._v('$ hexo new photo "My Gallery"\n')]),
        ]),
      ]),
      _c("p", [
        _vm._v("在执行这行指令时，Hexo 会尝试在 "),
        _c("code", [_vm._v("scaffolds")]),
        _vm._v(" 文件夹中寻找 "),
        _c("code", [_vm._v("photo.md")]),
        _vm._v("，并根据其内容建立文章，以下是您可以在模版中使用的变量："),
      ]),
      _vm._v(" "),
      _c("table", [
        _c("thead", [
          _c("tr", [
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("变量"),
            ]),
            _vm._v(" "),
            _c("th", { staticStyle: { "text-align": "left" } }, [
              _vm._v("描述"),
            ]),
          ]),
        ]),
        _vm._v(" "),
        _c("tbody", [
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("layout")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("布局"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("title")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("标题"),
            ]),
          ]),
          _vm._v(" "),
          _c("tr", [
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _c("code", [_vm._v("date")]),
            ]),
            _vm._v(" "),
            _c("td", { staticStyle: { "text-align": "left" } }, [
              _vm._v("文件建立日期"),
            ]),
          ]),
        ]),
      ]),
    ]
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}