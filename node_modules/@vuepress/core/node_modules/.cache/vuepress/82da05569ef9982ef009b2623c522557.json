{"remainingRequest":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vuepress-plugin-fulltext-search/components/SearchBox.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vuepress-plugin-fulltext-search/components/SearchBox.vue","mtime":1651677595382},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/cache-loader/dist/cjs.js","mtime":1651677591141},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/babel-loader/lib/index.js","mtime":1651677591176},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/cache-loader/dist/cjs.js","mtime":1651677591141},{"path":"/Users/mac/Documents/GitHub/vilivala2.0/node_modules/vue-loader/lib/index.js","mtime":1651677591276}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmbGV4c2VhcmNoU3ZjIGZyb20gJy4uL3NlcnZpY2VzL2ZsZXhzZWFyY2hTdmMnCgovLyBzZWUgaHR0cHM6Ly92dWVwcmVzcy52dWVqcy5vcmcvcGx1Z2luL29wdGlvbi1hcGkuaHRtbCNjbGllbnRkeW5hbWljbW9kdWxlcwppbXBvcnQgaG9va3MgZnJvbSAnQGR5bmFtaWMvaG9va3MnCgovKiBnbG9iYWwgU0VBUkNIX01BWF9TVUdHRVNUSU9OUywgU0VBUkNIX1BBVEhTLCBTRUFSQ0hfSE9US0VZUyAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlYXJjaEJveCcsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHF1ZXJ5OiAnJywKICAgICAgZm9jdXNlZDogZmFsc2UsCiAgICAgIGZvY3VzSW5kZXg6IDAsCiAgICAgIHBsYWNlaG9sZGVyOiB1bmRlZmluZWQsCiAgICAgIHN1Z2dlc3Rpb25zOiBudWxsLAogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHF1ZXJ5VGVybXMoKSB7CiAgICAgIGlmICghdGhpcy5xdWVyeSkgcmV0dXJuIFtdCiAgICAgIGNvbnN0IHJlc3VsdCA9IGZsZXhzZWFyY2hTdmMKICAgICAgICAubm9ybWFsaXplU3RyaW5nKHRoaXMucXVlcnkpCiAgICAgICAgLnNwbGl0KC9bXlxwe0x9XHB7Tn1fXSsvaXUpCiAgICAgICAgLmZpbHRlcih0ID0+IHQpCiAgICAgIHJldHVybiByZXN1bHQKICAgIH0sCiAgICBzaG93U3VnZ2VzdGlvbnMoKSB7CiAgICAgIHJldHVybiB0aGlzLmZvY3VzZWQgJiYgdGhpcy5zdWdnZXN0aW9ucyAmJiB0aGlzLnN1Z2dlc3Rpb25zLmxlbmd0aAogICAgfSwKCiAgICAvLyBtYWtlIHN1Z2dlc3Rpb25zIGFsaWduIHJpZ2h0IHdoZW4gdGhlcmUgYXJlIG5vdCBlbm91Z2ggaXRlbXMKICAgIGFsaWduUmlnaHQoKSB7CiAgICAgIGNvbnN0IG5hdkNvdW50ID0gKHRoaXMuJHNpdGUudGhlbWVDb25maWcubmF2IHx8IFtdKS5sZW5ndGgKICAgICAgY29uc3QgcmVwbyA9IHRoaXMuJHNpdGUucmVwbyA/IDEgOiAwCiAgICAgIHJldHVybiBuYXZDb3VudCArIHJlcG8gPD0gMgogICAgfSwKICB9LAogIHdhdGNoOiB7CiAgICBxdWVyeSgpIHsKICAgICAgdGhpcy5nZXRTdWdnZXN0aW9ucygpCiAgICB9LAogIH0sCiAgLyogZ2xvYmFsIE9QVElPTlMgKi8KICBtb3VudGVkKCkgewogICAgY29uc3Qgb3B0aW9ucyA9IE9QVElPTlMgfHwge30KICAgIGZsZXhzZWFyY2hTdmMuYnVpbGRJbmRleCh0aGlzLiRzaXRlLnBhZ2VzLCBvcHRpb25zKQogICAgdGhpcy5wbGFjZWhvbGRlciA9IHRoaXMuJHNpdGUudGhlbWVDb25maWcuc2VhcmNoUGxhY2Vob2xkZXIgfHwgJycKICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLm9uSG90a2V5KQoKICAgIC8vIHNldCBxdWVyeSBmcm9tIFVSTAogICAgY29uc3QgcGFyYW1zID0gdGhpcy51cmxQYXJhbXMoKQogICAgaWYgKHBhcmFtcykgewogICAgICBjb25zdCBxdWVyeSA9IHBhcmFtcy5nZXQoJ3F1ZXJ5JykKICAgICAgaWYgKHF1ZXJ5KSB7CiAgICAgICAgdGhpcy5xdWVyeSA9IGRlY29kZVVSSShxdWVyeSkKICAgICAgICB0aGlzLmZvY3VzZWQgPSB0cnVlCiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgdGhpcy5vbkhvdGtleSkKICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldFN1Z2dlc3Rpb25zKCkgewogICAgICBpZiAoIXRoaXMucXVlcnkgfHwgIXRoaXMucXVlcnlUZXJtcy5sZW5ndGgpIHsKICAgICAgICB0aGlzLnN1Z2dlc3Rpb25zID0gW10KICAgICAgICByZXR1cm4KICAgICAgfQogICAgICBsZXQgc3VnZ2VzdGlvbnMgPSBhd2FpdCBmbGV4c2VhcmNoU3ZjLm1hdGNoKAogICAgICAgIHRoaXMucXVlcnksCiAgICAgICAgdGhpcy5xdWVyeVRlcm1zLAogICAgICAgIHRoaXMuJHNpdGUudGhlbWVDb25maWcuc2VhcmNoTWF4U3VnZ2VzdGlvbnMgfHwgU0VBUkNIX01BWF9TVUdHRVNUSU9OUywKICAgICAgKQogICAgICBpZiAoaG9va3MucHJvY2Vzc1N1Z2dlc3Rpb25zKSB7CiAgICAgICAgLy8gYXVnbWVudCBzdWdnZXN0aW9ucyB3aXRoIHVzZXItcHJvdmlkZWQgZnVuY3Rpb24KICAgICAgICBzdWdnZXN0aW9ucyA9IGF3YWl0IGhvb2tzLnByb2Nlc3NTdWdnZXN0aW9ucyhzdWdnZXN0aW9ucywgdGhpcy5xdWVyeSwgdGhpcy5xdWVyeVRlcm1zKQogICAgICB9CiAgICAgIHRoaXMuc3VnZ2VzdGlvbnMgPSBzdWdnZXN0aW9ucy5tYXAocyA9PiAoewogICAgICAgIC4uLnMsCiAgICAgICAgaGVhZGluZ0Rpc3BsYXk6IGhpZ2hsaWdodChzLmhlYWRpbmdTdHIsIHMuaGVhZGluZ0hpZ2hsaWdodCksCiAgICAgICAgY29udGVudERpc3BsYXk6IGhpZ2hsaWdodChzLmNvbnRlbnRTdHIsIHMuY29udGVudEhpZ2hsaWdodCksCiAgICAgIH0pKQogICAgfSwKICAgIGdldFBhZ2VMb2NhbGVQYXRoKHBhZ2UpIHsKICAgICAgZm9yIChjb25zdCBsb2NhbGVQYXRoIGluIHRoaXMuJHNpdGUubG9jYWxlcyB8fCB7fSkgewogICAgICAgIGlmIChsb2NhbGVQYXRoICE9PSAnLycgJiYgcGFnZS5wYXRoLmluZGV4T2YobG9jYWxlUGF0aCkgPT09IDApIHsKICAgICAgICAgIHJldHVybiBsb2NhbGVQYXRoCiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiAnLycKICAgIH0sCiAgICBpc1NlYXJjaGFibGUocGFnZSkgewogICAgICBsZXQgc2VhcmNoUGF0aHMgPSBTRUFSQ0hfUEFUSFMKICAgICAgLy8gYWxsIHBhdGhzIHNlYXJjaGFibGVzCiAgICAgIGlmIChzZWFyY2hQYXRocyA9PT0gbnVsbCkgewogICAgICAgIHJldHVybiB0cnVlCiAgICAgIH0KICAgICAgc2VhcmNoUGF0aHMgPSBBcnJheS5pc0FycmF5KHNlYXJjaFBhdGhzKSA/IHNlYXJjaFBhdGhzIDogbmV3IEFycmF5KHNlYXJjaFBhdGhzKQogICAgICByZXR1cm4gKAogICAgICAgIHNlYXJjaFBhdGhzLmZpbHRlcihwYXRoID0+IHsKICAgICAgICAgIHJldHVybiBwYWdlLnBhdGgubWF0Y2gocGF0aCkKICAgICAgICB9KS5sZW5ndGggPiAwCiAgICAgICkKICAgIH0sCiAgICBvbkhvdGtleShldmVudCkgewogICAgICBpZiAoZXZlbnQuc3JjRWxlbWVudCA9PT0gZG9jdW1lbnQuYm9keSAmJiBTRUFSQ0hfSE9US0VZUy5pbmNsdWRlcyhldmVudC5rZXkpKSB7CiAgICAgICAgdGhpcy4kcmVmcy5pbnB1dC5mb2N1cygpCiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICB9CiAgICB9LAogICAgb25VcCgpIHsKICAgICAgaWYgKHRoaXMuc2hvd1N1Z2dlc3Rpb25zKSB7CiAgICAgICAgaWYgKHRoaXMuZm9jdXNJbmRleCA+IDApIHsKICAgICAgICAgIHRoaXMuZm9jdXNJbmRleC0tCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuZm9jdXNJbmRleCA9IHRoaXMuc3VnZ2VzdGlvbnMubGVuZ3RoIC0gMQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIG9uRG93bigpIHsKICAgICAgaWYgKHRoaXMuc2hvd1N1Z2dlc3Rpb25zKSB7CiAgICAgICAgaWYgKHRoaXMuZm9jdXNJbmRleCA8IHRoaXMuc3VnZ2VzdGlvbnMubGVuZ3RoIC0gMSkgewogICAgICAgICAgdGhpcy5mb2N1c0luZGV4KysKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5mb2N1c0luZGV4ID0gMAogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGdvKGkpIHsKICAgICAgaWYgKCF0aGlzLnNob3dTdWdnZXN0aW9ucykgewogICAgICAgIHJldHVybgogICAgICB9CiAgICAgIGlmIChob29rcy5vbkdvVG9TdWdnZXN0aW9uKSB7CiAgICAgICAgY29uc3QgcmVzdWx0ID0gaG9va3Mub25Hb1RvU3VnZ2VzdGlvbihpLCB0aGlzLnN1Z2dlc3Rpb25zW2ldLCB0aGlzLnF1ZXJ5LCB0aGlzLnF1ZXJ5VGVybXMpCiAgICAgICAgaWYgKHJlc3VsdCA9PT0gdHJ1ZSkgcmV0dXJuCiAgICAgIH0KICAgICAgaWYgKHRoaXMuc3VnZ2VzdGlvbnNbaV0uZXh0ZXJuYWwpIHsKICAgICAgICB3aW5kb3cub3Blbih0aGlzLnN1Z2dlc3Rpb25zW2ldLnBhdGggKyB0aGlzLnN1Z2dlc3Rpb25zW2ldLnNsdWcsICdfYmxhbmsnKQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHRoaXMuc3VnZ2VzdGlvbnNbaV0ucGF0aCArIHRoaXMuc3VnZ2VzdGlvbnNbaV0uc2x1ZykKICAgICAgICB0aGlzLnF1ZXJ5ID0gJycKICAgICAgICB0aGlzLmZvY3VzSW5kZXggPSAwCiAgICAgICAgdGhpcy5mb2N1c2VkID0gZmFsc2UKCiAgICAgICAgLy8gcmVzZXQgcXVlcnkgcGFyYW0KICAgICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLnVybFBhcmFtcygpCiAgICAgICAgaWYgKHBhcmFtcykgewogICAgICAgICAgcGFyYW1zLmRlbGV0ZSgncXVlcnknKQogICAgICAgICAgY29uc3QgcGFyYW1zU3RyaW5nID0gcGFyYW1zLnRvU3RyaW5nKCkKICAgICAgICAgIGNvbnN0IG5ld1N0YXRlID0gd2luZG93LmxvY2F0aW9uLnBhdGhuYW1lICsgKHBhcmFtc1N0cmluZyA/IGA/JHtwYXJhbXNTdHJpbmd9YCA6ICcnKQogICAgICAgICAgaGlzdG9yeS5wdXNoU3RhdGUobnVsbCwgJycsIG5ld1N0YXRlKQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGZvY3VzKGkpIHsKICAgICAgdGhpcy5mb2N1c0luZGV4ID0gaQogICAgfSwKICAgIHVuZm9jdXMoKSB7CiAgICAgIHRoaXMuZm9jdXNJbmRleCA9IC0xCiAgICB9LAogICAgdXJsUGFyYW1zKCkgewogICAgICBpZiAoIXdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpIHsKICAgICAgICByZXR1cm4gbnVsbAogICAgICB9CiAgICAgIHJldHVybiBuZXcgVVJMU2VhcmNoUGFyYW1zKHdpbmRvdy5sb2NhdGlvbi5zZWFyY2gpCiAgICB9LAogIH0sCn0KCmZ1bmN0aW9uIGhpZ2hsaWdodChzdHIsIHN0ckhpZ2hsaWdodCkgewogIGlmICghc3RyKSByZXR1cm4ge30KICBpZiAoIXN0ckhpZ2hsaWdodCkgcmV0dXJuIHsgcHJlZml4OiBzdHIgfQogIGNvbnN0IFtzdGFydCwgbGVuZ3RoXSA9IHN0ckhpZ2hsaWdodAogIGNvbnN0IGVuZCA9IHN0YXJ0ICsgbGVuZ3RoCgogIGNvbnN0IHByZWZpeCA9IHN0ci5zbGljZSgwLCBzdGFydCkKICBjb25zdCBoaWdobGlnaHRlZENvbnRlbnQgPSBzdHIuc2xpY2Uoc3RhcnQsIGVuZCkKICBjb25zdCBzdWZmaXggPSBzdHIuc2xpY2UoZW5kKQogIHJldHVybiB7IHByZWZpeCwgaGlnaGxpZ2h0ZWRDb250ZW50LCBzdWZmaXggfQoKICAvLyByZXR1cm4gYCR7cHJlZml4fTxzcGFuIGNsYXNzPSJoaWdobGlnaHQiPiR7aGlnaGxpZ2h0ZWRDb250ZW50fTwvc3Bhbj4ke3N1ZmZpeH1gCn0K"},null]}