{"remainingRequest":"/Users/zervan/GitHub/ViliVala/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zervan/GitHub/ViliVala/vilivala/components/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zervan/GitHub/ViliVala/vilivala/components/Home.vue","mtime":1675328261653},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/babel-loader/lib/index.js","mtime":1675328258443},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js","mtime":1675328261461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}