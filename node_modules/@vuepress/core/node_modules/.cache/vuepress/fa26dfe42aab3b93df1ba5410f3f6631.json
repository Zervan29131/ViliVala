{"remainingRequest":"/Users/zervan/GitHub/ViliVala/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zervan/GitHub/ViliVala/node_modules/vuepress-plugin-comment/Comment.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vuepress-plugin-comment/Comment.vue","mtime":1675328261509},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/babel-loader/lib/index.js","mtime":1675328258443},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/cache-loader/dist/cjs.js","mtime":1675328258502},{"path":"/Users/zervan/GitHub/ViliVala/node_modules/vue-loader/lib/index.js","mtime":1675328261461}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL3plcnZhbi9HaXRIdWIvVmlsaVZhbGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnN0YXJ0cy13aXRoLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwovLwovLwovLwovLwppbXBvcnQgeyBwcm92aWRlciwgcmVuZGVyQ29uZmlnLCBsb2FkU2NyaXB0IH0gZnJvbSAnLi91dGlsJzsKdmFyIGNvbW1lbnREb21JRCA9ICd2dWVwcmVzcy1wbHVnaW4tY29tbWVudCc7CnZhciB0aW1lciA9IG51bGw7CmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aW1lciA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICB2YXIgZnJvbnRtYXR0ZXIgPSBfb2JqZWN0U3ByZWFkKHsKICAgICAgICB0bzoge30sCiAgICAgICAgZnJvbToge30KICAgICAgfSwgX3RoaXMuJGZyb250bWF0dGVyKTsKCiAgICAgIGNsZWFyKCkgJiYgbmVlZENvbW1lbnQoZnJvbnRtYXR0ZXIpICYmIHJlbmRlckNvbW1lbnQoZnJvbnRtYXR0ZXIpOwogICAgfSwgMTAwMCk7CiAgICB0aGlzLiRyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICh0bywgZnJvbSkgewogICAgICBpZiAodG8gJiYgZnJvbSAmJiB0by5wYXRoID09PSBmcm9tLnBhdGgpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHZhciBmcm9udG1hdHRlciA9IF9vYmplY3RTcHJlYWQoewogICAgICAgIHRvOiB0bywKICAgICAgICBmcm9tOiBmcm9tCiAgICAgIH0sIF90aGlzLiRmcm9udG1hdHRlcik7CgogICAgICBjbGVhcigpICYmIG5lZWRDb21tZW50KGZyb250bWF0dGVyKSAmJiByZW5kZXJDb21tZW50KGZyb250bWF0dGVyKTsKICAgIH0pOwogIH0KfTsKLyoqCiAqIENsZWFyIGxhc3QgcGFnZSBjb21tZW50IGRvbQogKi8KCmZ1bmN0aW9uIGNsZWFyKGZyb250bWF0dGVyKSB7CiAgc3dpdGNoIChDT01NRU5UX0NIT09TRU4pIHsKICAgIGNhc2UgJ2dpdGFsayc6CiAgICAgIHJldHVybiBwcm92aWRlci5naXRhbGsuY2xlYXIoY29tbWVudERvbUlEKTsKCiAgICBjYXNlICd2YWxpbmUnOgogICAgICB2YXIgZWwgPSBDT01NRU5UX09QVElPTlMuZWwgfHwgY29tbWVudERvbUlEOwoKICAgICAgaWYgKGVsLnN0YXJ0c1dpdGgoJyMnKSkgewogICAgICAgIGVsID0gZWwuc2xpY2UoMSk7CiAgICAgIH0KCiAgICAgIGNvbnNvbGUubG9nKGVsKTsKICAgICAgcmV0dXJuIHByb3ZpZGVyLnZhbGluZS5jbGVhcihlbCk7CgogICAgZGVmYXVsdDoKICAgICAgcmV0dXJuIGZhbHNlOwogIH0KfQovKioKICogQ2hlY2sgaWYgY3VycmVudCBwYWdlIG5lZWRzIHJlbmRlciBjb21tZW50CiAqLwoKCmZ1bmN0aW9uIG5lZWRDb21tZW50KGZyb250bWF0dGVyKSB7CiAgcmV0dXJuIGZyb250bWF0dGVyLmNvbW1lbnQgIT09IGZhbHNlICYmIGZyb250bWF0dGVyLmNvbW1lbnRzICE9PSBmYWxzZTsKfQovKioKICogUmVuZGVyIGNvbW1lbnQgZG9tIGFuZCBhcHBlbmQgaXQgdG8gY29udGFpbmVyCiAqLwoKCmZ1bmN0aW9uIHJlbmRlckNvbW1lbnQoZnJvbnRtYXR0ZXIpIHsKICBjbGVhclRpbWVvdXQodGltZXIpOwogIHZhciBwYXJlbnRET00gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKENPTU1FTlRfQ09OVEFJTkVSKTsKCiAgaWYgKCFwYXJlbnRET00pIHsKICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiByZW5kZXJDb21tZW50KGZyb250bWF0dGVyKTsKICAgIH0sIDIwMCk7CiAgICByZXR1cm47CiAgfQoKICBzd2l0Y2ggKENPTU1FTlRfQ0hPT1NFTikgewogICAgY2FzZSAnZ2l0YWxrJzoKICAgICAgcmV0dXJuIHByb3ZpZGVyLmdpdGFsay5yZW5kZXIoZnJvbnRtYXR0ZXIsIGNvbW1lbnREb21JRCk7CgogICAgY2FzZSAndmFsaW5lJzoKICAgICAgdmFyIGVsID0gQ09NTUVOVF9PUFRJT05TLmVsIHx8IGNvbW1lbnREb21JRDsKCiAgICAgIGlmIChlbC5zdGFydHNXaXRoKCcjJykpIHsKICAgICAgICBlbCA9IGVsLnNsaWNlKDEpOwogICAgICB9CgogICAgICByZXR1cm4gcHJvdmlkZXIudmFsaW5lLnJlbmRlcihmcm9udG1hdHRlciwgZWwpOwoKICAgIGRlZmF1bHQ6CiAgICAgIHJldHVybiBmYWxzZTsKICB9Cn0="},{"version":3,"mappings":";;;;;;;;AAKA,SACAA,QADA,EAEAC,YAFA,EAGAC,UAHA,QAIA,QAJA;AAMA;AACA;AAEA;EACAC,OADA,qBACA;IAAA;;IACAC;MACA;QACAC,MADA;QAEAC;MAFA,GAGA,kBAHA;;MAKAC;IACA,CAPA,EAOA,IAPA;IASA;MACA;QACA;MACA;;MACA;QACAF,MADA;QAEAC;MAFA,GAGA,kBAHA;;MAKAC;IACA,CAVA;EAWA;AAtBA;AAyBA;AACA;AACA;;AACA;EACA;IACA;MACA;;IACA;MACA;;MACA;QACAC;MACA;;MACAC;MACA;;IACA;MAAA;EAVA;AAYA;AAEA;AACA;AACA;;;AACA;EACA;AACA;AAEA;AACA;AACA;;;AACA;EACAC;EAEA;;EACA;IACAN;MAAA;IAAA;IACA;EACA;;EAEA;IACA;MACA;;IACA;MACA;;MACA;QACAI;MACA;;MACA;;IACA;MAAA;EATA;AAWA","names":["provider","renderConfig","loadScript","mounted","timer","to","from","clear","el","console","clearTimeout"],"sourceRoot":"node_modules/vuepress-plugin-comment","sources":["Comment.vue"],"sourcesContent":["<template>\n  <div></div>\n</template>\n\n<script>\nimport {\n  provider,\n  renderConfig,\n  loadScript,\n} from './util'\n\nconst commentDomID = 'vuepress-plugin-comment' \nlet timer = null\n\nexport default {\n  mounted () {\n    timer = setTimeout(() => {\n      const frontmatter = {\n        to: {},\n        from: {},\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    }, 1000)\n\n    this.$router.afterEach((to, from) => {\n      if (to && from && to.path === from.path) {\n        return\n      }\n      const frontmatter = {\n        to,\n        from,\n        ...this.$frontmatter\n      }\n      clear() && needComment(frontmatter) && renderComment(frontmatter)\n    })\n  }\n}\n\n/**\n * Clear last page comment dom\n */\nfunction clear (frontmatter) {\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.clear(commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      console.log(el)\n      return provider.valine.clear(el)\n    default: return false\n  }\n}\n\n/**\n * Check if current page needs render comment\n */\nfunction needComment (frontmatter) {\n  return frontmatter.comment !== false && frontmatter.comments !== false\n}\n\n/**\n * Render comment dom and append it to container\n */\nfunction renderComment (frontmatter) {\n  clearTimeout(timer)\n\n  const parentDOM = document.querySelector(COMMENT_CONTAINER)\n  if (!parentDOM) {\n    timer = setTimeout(() => renderComment(frontmatter), 200)\n    return \n  }\n\n  switch (COMMENT_CHOOSEN) {\n    case 'gitalk': \n      return provider.gitalk.render(frontmatter, commentDomID)\n    case 'valine': \n      let el = COMMENT_OPTIONS.el || commentDomID\n      if (el.startsWith('#')) {\n        el = el.slice(1)\n      }\n      return provider.valine.render(frontmatter, el)\n    default: return false\n  }\n}\n</script>\n"]}]}