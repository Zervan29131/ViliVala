{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{549:function(v,_,p){\"use strict\";p.r(_);var t=p(30),u=Object(t.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[p(\"h2\",{attrs:{id:\"写程序有n个层次\"}},[p(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#写程序有n个层次\"}},[v._v(\"#\")]),v._v(\" 写程序有N个层次\")]),v._v(\" \"),p(\"p\",[v._v(\"1、这个东西的原理是什么\")]),v._v(\" \"),p(\"p\",[v._v(\"2、我该如何把它用代码表达出来\")]),v._v(\" \"),p(\"p\",[v._v(\"3、这个表达方式究竟对不对？能不能通过编译？\")]),v._v(\" \"),p(\"p\",[v._v(\"4、为什么这行程序还有这么多副作用？它完全不按我预想工作怎么办？\")]),v._v(\" \"),p(\"p\",[v._v(\"5、我就是参考书，所有语句在内存在寄存器在任何地方的任何副作用全都门清！\")]),v._v(\" \"),p(\"p\",[v._v(\"6、这里的边界值究竟该用>呢，还是>=呢？分割点这个边界是写成j+1呢，还是j-1？\")]),v._v(\" \"),p(\"p\",[v._v(\"7、我才写了两行你给我7k报错……什么时候C++里面来了这么多双冒号这么多<>>><><><<>?!\")]),v._v(\" \"),p(\"h2\",{attrs:{id:\"一般来说\"}},[p(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一般来说\"}},[v._v(\"#\")]),v._v(\" 一般来说：\")]),v._v(\" \"),p(\"p\",[v._v(\"纯看书能把1学好已经很不错了；\")]),v._v(\" \"),p(\"p\",[v._v(\"想到2就必须多思考；\")]),v._v(\" \"),p(\"p\",[v._v(\"想到3就必须多上机；\")]),v._v(\" \"),p(\"p\",[v._v(\"想到4就必须把微机原理、操作系统原理等等融会贯通（不需要很深，但起码得知道哪是哪）；\")]),v._v(\" \"),p(\"p\",[v._v(\"想到5就得对编程痴迷，没用又疯又傻的经历，怎么可能把满篇鬼画符读出肉味。\")]),v._v(\" \"),p(\"p\",[v._v(\"想到6反而得从书里走出来，彻彻底底把自己的脑袋变成CPU，以至于见了代码无需实际运行静态分析都能把它的整个运行过程看的通通透透……\")]),v._v(\" \"),p(\"p\",[v._v(\"想到7就得跳出课本窠臼，自发的跟踪研读新技术——没错，泛型之类“过新”的技术并不在教材范围内，你必须有能力自己查资料自己教自己知识……\")]),v._v(\" \"),p(\"p\",[v._v(\"如果你想要在课堂上现场敲代码、敲完一遍过……那么不到5甚至6基本上是不可能的。然而很遗憾，这水平哪怕专业程序员都不多见——我在知乎说自己编程，不超2000行一般都能0 error 0 warn 0 bug一遍过，多少人骂我吹牛。\")]),v._v(\" \"),p(\"p\",[v._v(\"对绝大多数人来说，一段代码写完，编译运行255个错误（第255个错误是错误太多无法继续）才是正常现象；然后排错一排五六个小时（往往总还是会有一两个错误无论如何都找不到根源）……\")]),v._v(\" \"),p(\"p\",[v._v(\"google chrome每千行代码bug率为0.06；或者说平均每十万行代码有6个bug；或者说平均每一万行代码有0.6个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"Firefox的代码质量要更好一些，千行bug率仅为0.05；也就是说平均每两万行代码会有一个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"python千行代码bug率为0.003，一百万行代码有3个bug，或者33万行代码出一个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"ruby千行bug率为0.08。\")]),v._v(\" \"),p(\"p\",[v._v(\"PHP千行bug率为0.03——刚好比python差了十倍。写的真烂，三万三千行代码就有一个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"django的bug率为0.007，比python代码质量差了不少，十几万行代码就有一个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"ruby on rails的bug率为0.05。\")]),v._v(\" \"),p(\"p\",[v._v(\"总结起来就是，这些业界支柱级的开源项目，其每千行代码的bug数目介于0.003到0.08之间；或者说，平均每一万两千五百行代码到三十万行代码会出一个bug。\")]),v._v(\" \"),p(\"p\",[v._v(\"再看看这个，看看你们能不能被吓死：\")]),v._v(\" \"),p(\"p\",[v._v(\"业界平均每1000行代码有15到50个bug；微软released代码平均1000行有0.5个bug——而NASA的代码，50万行0bug！\")]),v._v(\" \"),p(\"p\",[v._v(\"看看这个数据，看看这些业界顶尖程序员的代码质量。\")]),v._v(\" \"),p(\"p\",[v._v(\"现在，看看我那可怜巴巴的、2000行代码0bug的记录，您觉得我是“代码质量真好”呢，还是“2000行无bug也值得出来吹”？\")]),v._v(\" \"),p(\"p\",[v._v(\"看着业界顶级程序员们的水平，我还觉得自己这两下子不够看呢；你们居然觉得是吹？\")]),v._v(\" \"),p(\"p\",[v._v(\"是我对自己要求太高呢，还是你们眼界太狭隘？\")])])}),[],!1,null,null,null);_.default=u.exports}}]);","extractedComments":[]}