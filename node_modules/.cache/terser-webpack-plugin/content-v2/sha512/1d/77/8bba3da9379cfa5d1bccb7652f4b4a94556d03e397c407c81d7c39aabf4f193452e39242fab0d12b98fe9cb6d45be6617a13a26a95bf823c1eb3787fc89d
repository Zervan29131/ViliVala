{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{532:function(t,s,a){\"use strict\";a.r(s);var r=a(30),i=Object(r.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"github提供的主要功能\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#github提供的主要功能\"}},[t._v(\"#\")]),t._v(\" GitHub提供的主要功能\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"issue\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#issue\"}},[t._v(\"#\")]),t._v(\" issue\")]),t._v(\" \"),a(\"p\",[t._v(\"Issue功能，是将一个任务或问题分配给一个Issue进行追踪和管理的功能。可以像BUG管理系统或TIDD ( Ticket driven Development)的\\nTicket一样使用。 在GiHub 上，每当进行我们 即将讲解的Pull Request,都会同时创建一个 Issue。\")]),t._v(\" \"),a(\"p\",[t._v(\"每一个功能更改或修正都对应一个 Issue,讨论或修正都以这个Issue为中心进行。只要查看Issue就能知道和这个更改相关的一切信息，并以此进行管理。\")]),t._v(\" \"),a(\"p\",[t._v('在Git的提交信息中写上Issue的ID (例如“#7\"” )，GitHub 就会自动生成从Issue到对应提交的链接。另外，只要按照特定的格式描述提交信息，还可以关闭Issue。')]),t._v(\" \"),a(\"h2\",{attrs:{id:\"wiki\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#wiki\"}},[t._v(\"#\")]),t._v(\" wiki\")]),t._v(\" \"),a(\"p\",[t._v(\"通过Wiki功能，任何人都能随时对一篇文章进行更改并保存，因此可以多人共同完成一篇文章。该功能常用在开发文档或手册的编写中。语法方面，可以通过GFM语法进行书写。Wiki页也是作为Git仓库进行管理的，改版的历史记录会被切实保存下来，使用者可以放心改写。由于其支持克隆至本地进行编辑，所以程序员使用时可以不必开启浏览器。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"pull-request\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pull-request\"}},[t._v(\"#\")]),t._v(\" pull request\")]),t._v(\" \"),a(\"p\",[t._v(\"开发者向GitHub的仓库推送更改或功能添加后，可以通过Pull Request功能向别人的仓库提出申请，请求对方合并。\\nPull Request送出后，目标仓库的管理者等人将能够查看Pull Request的内容及其中包含的代码更改。\\n同时，GitHhub还提供了对Pll Request和源代码前后差别进行讨论的功能，通过此功能，可以以行为单位对源代码添加评论，让程序员之间可以高效的交流。\")]),t._v(\" \"),a(\"h1\",{attrs:{id:\"实际动手使用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#实际动手使用\"}},[t._v(\"#\")]),t._v(\" 实际动手使用\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"仓库的创建及部署\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#仓库的创建及部署\"}},[t._v(\"#\")]),t._v(\" 仓库的创建及部署\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"repository-name\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#repository-name\"}},[t._v(\"#\")]),t._v(\" repository name\")]),t._v(\" \"),a(\"p\",[t._v(\"输入仓库的名称\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"description\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#description\"}},[t._v(\"#\")]),t._v(\" description\")]),t._v(\" \"),a(\"p\",[t._v(\"设置仓库的说明（非必填）\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"initialize-this-repository-with-a-readme\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#initialize-this-repository-with-a-readme\"}},[t._v(\"#\")]),t._v(\" initialize this repository with a README\")]),t._v(\" \"),a(\"p\",[t._v(\"再次选项下打钩，随后自动初始化仓库并设置README文件，用户可以直接clone这个仓库，如果想向GitHub添加手中已有的git仓库，建议不要勾选，直接手动push\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"add-git-ignore\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#add-git-ignore\"}},[t._v(\"#\")]),t._v(\" add .git ignore\")]),t._v(\" \"),a(\"p\",[t._v(\"该文件用来描述git仓库中不需要管理的文件与目录。您可以在存储库的根目录中创建一个.gitignore文件，以告诉 Git 在您提交时忽略哪些文件和目录。要与克隆存储库的其他用户共享忽略规则，请将.gitignore文件提交到您的存储库。\")]),t._v(\" \"),a(\"p\",[t._v(\"这个设定会帮我们把不需要在Git仓库中进行版本管理的文件记录在gitignore 文件中，通过它可以在初始化时自动生成gitignore 文件，省去了每次根据框架进行设置的麻烦。下拉菜单中包含了主要的语言及框架，选择今后将要使用的即可。由于我们并不经常使用该功能，所以不做选择。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"add-a-licence\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#add-a-licence\"}},[t._v(\"#\")]),t._v(\" add a licence\")]),t._v(\" \"),a(\"p\",[t._v(\"右侧的下拉菜单可以选择要添加的许可协议文件。如果这个仓库中包含的代码已经确定了许可协议，那么请在这里进行选择。随后将自动\\n生成包含许可协议内容的LICENSE文件，用来表明该仓库内容的许可协议。输人选择都完成后，点击Create repository按钮，完成仓库的创建。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"url\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#url\"}},[t._v(\"#\")]),t._v(\" url\")]),t._v(\" \"),a(\"p\",[t._v(\"这个URL便是刚刚创建的仓库的页面。\\nhttps://github.com/username/repositoryname\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"readme-md\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#readme-md\"}},[t._v(\"#\")]),t._v(\" README.md\")]),t._v(\" \"),a(\"p\",[t._v(\"README md在初始化时已经生成好了。README.md文件的内容会自动显示在仓库的首页当中。因此，人们一般会在这个文件中标明本仓库所包含的软件的概要、使用流程、许可协议等信息。如果使用Markdown语法进行描述，还可以添加标记，提高可读性。\")]),t._v(\" \"),a(\"h1\",{attrs:{id:\"详细解说github的功能\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#详细解说github的功能\"}},[t._v(\"#\")]),t._v(\" 详细解说GitHub的功能\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"快捷键\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#快捷键\"}},[t._v(\"#\")]),t._v(\" 快捷键\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"shift+/\")]),t._v(\"显示快捷键一览表\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"工具栏\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#工具栏\"}},[t._v(\"#\")]),t._v(\" 工具栏\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"pull-requests\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pull-requests\"}},[t._v(\"#\")]),t._v(\" Pull requests\")]),t._v(\" \"),a(\"p\",[t._v(\"显示用户已进行的Pull Request。通过这里，开发者可以很方便的追踪Pull Request的后续情况。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"issues\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#issues\"}},[t._v(\"#\")]),t._v(\" Issues\")]),t._v(\" \"),a(\"p\",[t._v(\"在这里可以查看用户拥有权限的仓库或者分配给自己的Issue。当用户同时进行多个项目时，可以在这里一并查看Issue。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"marktplace\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#marktplace\"}},[t._v(\"#\")]),t._v(\" Marktplace\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"explore\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#explore\"}},[t._v(\"#\")]),t._v(\" Explore\")]),t._v(\" \"),a(\"p\",[t._v(\"这里将从各个角度介绍GitHub上的热门软件（附开发者制作的视频）。我们可以按语言筛选本日/周/月的各语言的顶尖代码库，在这里有机会了解到最尖端的技术和软件。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"notificationgs\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#notificationgs\"}},[t._v(\"#\")]),t._v(\" notificationgs\")]),t._v(\" \"),a(\"p\",[t._v(\"用于提示用户是否有新的通知。用户在新建issue、被评论、进行pull request等时都会收到通知，用户在GitHub收到通知会同时发送到该用户的注册邮箱。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"create-a-new\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#create-a-new\"}},[t._v(\"#\")]),t._v(\" create a new...\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"new respository\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"import repository\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"new gist\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"new organization\")])]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"new project\")])]),t._v(\" \"),a(\"p\",[t._v(\"创建新的git仓库或者organization，向organization添加成员、小组、仓库，为仓库添加Issue或collaborator等操作的菜单都聚集在这里。显示内容会根据当前页面不同而改变。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"控制面板\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#控制面板\"}},[t._v(\"#\")]),t._v(\" 控制面板\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"all-activity\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#all-activity\"}},[t._v(\"#\")]),t._v(\" All activity\")]),t._v(\" \"),a(\"p\",[t._v(\"显示目前已Follow的用户和已Watch的项目的活动信息，用户可以在这里查看最新动向。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"repositories\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#repositories\"}},[t._v(\"#\")]),t._v(\" repositories\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"explore-repositories\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#explore-repositories\"}},[t._v(\"#\")]),t._v(\" Explore repositories\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"个人信息\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#个人信息\"}},[t._v(\"#\")]),t._v(\" 个人信息\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"用户信息\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#用户信息\"}},[t._v(\"#\")]),t._v(\" 用户信息\")]),t._v(\" \"),a(\"p\",[t._v(\"这里显示注册用户的基本信息，包括姓名、所属公司、邮箱地址、已加入的Organization等。如果对该用户感兴趣，可以点击Follow。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"popular-repositories-pinned\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#popular-repositories-pinned\"}},[t._v(\"#\")]),t._v(\" Popular repositories（pinned）\")]),t._v(\" \"),a(\"p\",[t._v(\"显示公开仓库中最受欢迎的、拥有大量Star的部分热门仓库。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"contribution-activity\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#contribution-activity\"}},[t._v(\"#\")]),t._v(\" Contribution activity\")]),t._v(\" \"),a(\"p\",[t._v(\"按时间顺序显示具体活动的链接\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"repositories-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#repositories-2\"}},[t._v(\"#\")]),t._v(\" Repositories\")]),t._v(\" \"),a(\"p\",[t._v(\"显示该用户公开的仓库。Fork来的仓库也显示在这里。\")]),t._v(\" \"),a(\"p\",[t._v(\"仓库名称、简要说明、使用的语言、最终更新日期都会出现在列表中。星形图案旁边的数字表示给这个仓库添加star的人数，再旁边是被\")]),t._v(\" \"),a(\"p\",[t._v(\"这个仓库的更新频率。横向为时间轴，右侧为最新时间。色块越高，该仓库的更新频率越高。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"仓库\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#仓库\"}},[t._v(\"#\")]),t._v(\" 仓库\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"用户名-仓库名\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#用户名-仓库名\"}},[t._v(\"#\")]),t._v(\" 用户名/仓库名\")]),t._v(\" \"),a(\"p\",[t._v(\"左上角图标旁边显示的是用户名和仓库名。斜线左侧为用户名。使用GitHub的组织账户时，这部分则为组织名。 斜线右侧是仓库名。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"watch-star-fork\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#watch-star-fork\"}},[t._v(\"#\")]),t._v(\" Watch/Star/Fork\")]),t._v(\" \"),a(\"p\",[t._v(\"眼睛图标旁边写着Watch 字样。点击这个按钮就可以Watch该仓库，今后该仓库的更新信息会显示在用户的公开活动中。Star 旁边的数字表示给这个仓库添加Star的人数。这个数越高，代表该仓库越受关注。\")]),t._v(\" \"),a(\"p\",[t._v(\"Watch与Star有所不同，Watch 之后该仓库的相关信息会在后述的Nofifications 中显示，让用户可以追踪仓库的内容，而Star更像是书签，让用户将来可以在Star标记的列表中找到该仓库。另外，Star数还是GitHub上判断仓库热门程度的指标之一。\")]),t._v(\" \"),a(\"p\",[t._v(\"旁边的分叉图标是Fork按钮。后面的数字代表该仓库被Fork至各用户仓库的次数。这个数字越大，表示参与这个仓库开发的人越多。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"code\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#code\"}},[t._v(\"#\")]),t._v(\" code\")]),t._v(\" \"),a(\"p\",[t._v(\"显示该仓库中的文件列表。仓库名下方是该仓库的简单说明和URL。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"pull-requests-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#pull-requests-2\"}},[t._v(\"#\")]),t._v(\" Pull Requests\")]),t._v(\" \"),a(\"p\",[t._v(\"Pull Requests是用户修改代码后向对方仓库发送采纳请求的功能。在pull request页面能够列表查看当前处于open状态的pull request。通过点击页面左部和上部的选项进行筛选和重新排列。在列表中点击特定的pull request就会进入详细界面，页面上显示着这次是从那个分支向谁的哪个分支发送了pull request。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"issue-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#issue-2\"}},[t._v(\"#\")]),t._v(\" Issue\")]),t._v(\" \"),a(\"p\",[t._v(\"用于BUG报告、功能添加、方向性讨论等，将这些以Issue形式进行管理。PullRequest时也会创建Issue。旁边显示的数字是当前处于Open状态的Issue数。\")]),t._v(\" \"),a(\"p\",[t._v(\"在软件开发过程中，开发者为了跟踪bug及进行软件相关讨论，进而方便管理，创建了Issue。在遇到以下几种情况时，我们可以使用这个功能。\")]),t._v(\" \"),a(\"ol\",[a(\"li\",[t._v(\"发现软件的bug并报告\")]),t._v(\" \"),a(\"li\",[t._v(\"有事想向作者询问、探讨\")]),t._v(\" \"),a(\"li\",[t._v(\"事先列出今后准备实施的任务\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"actions\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#actions\"}},[t._v(\"#\")]),t._v(\" Actions\")]),t._v(\" \"),a(\"p\",[t._v(\"显示该仓库最近的活动信息。了解该仓库中的软件是无人问津，还是再火热的开发之中。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"wiki-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#wiki-2\"}},[t._v(\"#\")]),t._v(\" Wiki\")]),t._v(\" \"),a(\"p\",[t._v(\"页面描述功能。用于记录开发者之间应该共享的信息或软件文档。\")]),t._v(\" \"),a(\"h1\",{attrs:{id:\"gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gist\"}},[t._v(\"#\")]),t._v(\" Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist是一款简单的 Web应用程序，常被开发者们用来共享示例代码和错误信息。开发者在线交流时难免会涉及软件日志的内容，但直接发送日志会占据很大的篇幅，给交流带来不便。这种情况下，我们更习惯把日志粘贴到Gist,然后将URL发送给对方。\")]),t._v(\" \"),a(\"p\",[t._v(\"此外，Gist 还可以用在如下场合。\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"代替记事本记录简短代码段\")]),t._v(\" \"),a(\"li\",[t._v(\"给对方发送示例代码\")])]),t._v(\" \"),a(\"p\",[t._v(\"使用Gist处理这类情况可以省去不少麻烦。\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist主要用于管理及发布一些没必要保存在仓库中的代码，比如小的代码片段等。我们可以将一些随便写的脚本代码等放在Gist中。系统会自动管理更新历史，并提供fork功能。并且，通过gist还可以很方便的为同事编写代码示例。\")]),t._v(\" \"),a(\"p\",[t._v(\"在gist上添加代码示例可以嵌入博客中，如果选择语言，还会自动添加语法高亮。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"gist-的特点\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gist-的特点\"}},[t._v(\"#\")]),t._v(\" Gist 的特点\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist最大的特点是可以与其他人轻松分享示例代码。它使用JavaScript编写的Ace编辑器，只需打开浏览器便可编写简单代码。\")]),t._v(\" \"),a(\"p\",[t._v(\"另外，Gist 中的文档都在版本管理系统的管理之下，用户可以放心编辑。而且由于其版本历史记录保管在Git仓库中，所以还可以通过clone操作将Gist获取至本地。共享Gist的人之间能够互相添加评论，所有交流都会被记录下来。\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist支持多种语言的语法高亮，可以大幅增强代码可读性。可以说，这一工具就是专为程序员设计的。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"创建gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建gist\"}},[t._v(\"#\")]),t._v(\" 创建Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"下面我们通过实际演示为各位讲解Gist。各位可以登录GitHub后点击上部菜单中的Gist或者直接访问Gist的URL。随后我们可以看到\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"ui讲解\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ui讲解\"}},[t._v(\"#\")]),t._v(\" UI讲解\")]),t._v(\" \"),a(\"p\",[t._v(\"接下来我们就各个项目分别进行讲解。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"gist-description\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gist-description\"}},[t._v(\"#\")]),t._v(\" Gist description...\")]),t._v(\" \"),a(\"p\",[t._v(\"头像右侧的这个文本框用来对当前Gist所包含的文件进行简要的说明。说明内容应尽量简明扼要，让自己一看就知道是什么。当然，阅览者也能看到这里的信息。\")]),t._v(\" \"),a(\"p\",[t._v(\"此项目并不是必填项，所以如果内容没有值得说明的地方，这项大可不必填写。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"name-this-file\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#name-this-file\"}},[t._v(\"#\")]),t._v(\" name this file...\")]),t._v(\" \"),a(\"p\",[t._v('这一项可供用户指定文件名。系统能够自动识别扩展名，将右侧的语言自动设置为对应种类。比如我们输人\"hello_gist.rb“，语言会自动设置为ruby。\\n此选项不是必填项，缺省状态下会以“gistfilel.扩展名”的形式自动分配名称。')]),t._v(\" \"),a(\"h4\",{attrs:{id:\"language\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#language\"}},[t._v(\"#\")]),t._v(\" language\")]),t._v(\" \"),a(\"p\",[t._v(\"这里可以给要创建的文件选择编程语言。如果前面没有指定文件名那么缺省名称的打展名将以这个设置为准。另外，文件中的代码会\\n按照这里设置的语言进行语法高亮。\")]),t._v(\" \"),a(\"p\",[t._v(\"下拉菜单中可以搜索语言，各位请选择适当的语言进行设置以提高可读性。\")]),t._v(\" \"),a(\"p\",[t._v(\"如果不更改设置，则文件默认为文本格式。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"ace-editor\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ace-editor\"}},[t._v(\"#\")]),t._v(\" ACE Editor\")]),t._v(\" \"),a(\"p\",[t._v(\"该复选框可以指定Ace是否有效。没有特殊情况还是建议各位设置为有效。这样一来，录入文件内容时就可以像普通编辑器样进行插入tab等操作了。\\n右侧是缩进的设置，可以选择用空格缩进还是Tab缩进。再右边是选择缩进幅度的下拉菜单。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"文件\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件\"}},[t._v(\"#\")]),t._v(\" 文件\")]),t._v(\" \"),a(\"p\",[t._v(\"这个文本框用来编辑文件的内容，可以手动编写也可以从剪贴板粘贴。与我们常用的编辑器或IDE相同，这里的文件内容会根据所选语言\\n即时语法高亮。\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist可以将Markdown语法的标题以及编程语言的方法或函数折叠起来，以大纲形式显示内容。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"add-another-file\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#add-another-file\"}},[t._v(\"#\")]),t._v(\" Add another File\")]),t._v(\" \"),a(\"p\",[t._v(\"一个Gist中可以包含多个文件。点击这个按钮可以在下方添加新的文件信息录人框，供用户添加更多文件。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"create-secret-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#create-secret-gist\"}},[t._v(\"#\")]),t._v(\" Create. Secret Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"通过这个按钮创建的Gist不会被公开，只有知道其URL的人可以阅览相关内容，使用这个方法能保证Gist只与特定儿人共享。不过，此Gis的URL一定要妥善保管。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"create-public-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#create-public-gist\"}},[t._v(\"#\")]),t._v(\" Create Public Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"以当前内容创建Gist.在Discover Gists上:也可以看到创建好的Gist。\")]),t._v(\" \"),a(\"p\",[t._v(\"每个Gist在创建时都会被自动分配一个URL。\")]),t._v(\" \"),a(\"p\",[t._v(\"我们可以通过这一URI 与其他开发者共享该Gist。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"查看gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查看gist\"}},[t._v(\"#\")]),t._v(\" 查看Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"这节我们将从Gist读者的角度出发进行讲解。\")]),t._v(\" \"),a(\"p\",[t._v(\"登录Github后可以在Gist中添加评论。当然也可以对自己的Gist进行编辑。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"gist的菜单\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gist的菜单\"}},[t._v(\"#\")]),t._v(\" Gist的菜单\")]),t._v(\" \"),a(\"p\",[t._v(\"Gist页菜单的右侧部分有两种模式，在自己的Gist下与其他人的Gist下显示的内容有所不同。\")]),t._v(\" \"),a(\"p\",[t._v(\"在自己的Gist中有Edit(编辑)和Delete (删除)按钮。\")]),t._v(\" \"),a(\"p\",[t._v(\"在两者共有的Advanced Options中，可以通过Report as Abuse来举报不良的Gist内容。将Gist标记为Star后，可以在Your Gists的Starred页快速找到这一Gist。\")]),t._v(\" \"),a(\"p\",[t._v(\"在其他人的Gist下有Fork 按钮，用户可以根据其他人的Gist创建自己的Gist。但是这个Fork与GitHub不同，不可以进行Pull Request。\")]),t._v(\" \"),a(\"p\",[t._v(\"下面我们就Gist的每个页面进行讲解。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"gist-detail\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#gist-detail\"}},[t._v(\"#\")]),t._v(\" Gist Detail\")]),t._v(\" \"),a(\"p\",[t._v(\"访问Gist的URL时会显示这个页面。在这里可以查看Gist的文件内容以及评论等详细信息。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"revisions\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#revisions\"}},[t._v(\"#\")]),t._v(\" Revisions\")]),t._v(\" \"),a(\"p\",[t._v(\"可以查看Gist的变更历史记录及差别。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"download-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#download-gist\"}},[t._v(\"#\")]),t._v(\" Download Gist\")]),t._v(\" \"),a(\"p\",[t._v(\"将Gist以tar.gz格式下载。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"clone-this-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#clone-this-gist\"}},[t._v(\"#\")]),t._v(\" Clone this gist\")]),t._v(\" \"),a(\"p\",[t._v(\"显示clone所需的路径。如果是自己的Gist,在本地编辑后还可以进行push等操作。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"embed-this-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#embed-this-gist\"}},[t._v(\"#\")]),t._v(\" Embed this gist\")]),t._v(\" \"),a(\"p\",[t._v(\"显示将Gist分享至博客时所需的HTML。各位想在博客上分享语法高亮的代码时可以利用这一-功能。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"link-to-this-gist\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#link-to-this-gist\"}},[t._v(\"#\")]),t._v(\" Link to this gist\")]),t._v(\" \"),a(\"p\",[t._v(\"显示当前Gist的URL。分享Gist时可以直接将这个URL告诉对方。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"文件的菜单\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文件的菜单\"}},[t._v(\"#\")]),t._v(\" 文件的菜单\")]),t._v(\" \"),a(\"p\",[t._v(\"各文件上方都有菜单，从左至右依次是文件么，指定的语言种类，永久链接，raw 的链接。如果想将Gist中的一个文件桃\\n指取到本地，使用永久链接会比较便捷。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"your-gists\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#your-gists\"}},[t._v(\"#\")]),t._v(\" Your Gists\")]),t._v(\" \"),a(\"p\",[t._v(\"点击Gist首页右上角的Your Gists按钮或者直接访问URL都可以进入Your Gists页面。在这里可以查看自己的Gist列表。\")]),t._v(\" \"),a(\"p\",[t._v(\"左侧菜单的Forked选项中显示通过Fork创建的Gist Starred 选项中显示已经标记Star的Gist。文字右侧的数字代表每类中 Gist的数量。\")]),t._v(\" \"),a(\"p\",[t._v(\"本部分中我们对Gist进行了讲解。通过这款应用，我们可以轻松共享笔记、错误信息以及一些没必要 放人仓库的代码片段。各位不妨在日常中多加利用，与其他人共享琐碎信息。\")])])}),[],!1,null,null,null);s.default=i.exports}}]);","extractedComments":[]}