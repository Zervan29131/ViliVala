{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{543:function(e,a,s){\"use strict\";s.r(a);var t=s(20),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"node-js-的安装及配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node-js-的安装及配置\"}},[e._v(\"#\")]),e._v(\" Node.js 的安装及配置\")]),e._v(\" \"),s(\"p\",[e._v(\"导读：\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"简单的说 Node.js 就是运行在服务端的 JavaScript。\\nNode.js 是一个基于Chrome JavaScript 运行时建立的一个平台。\\nNode.js是一个事件驱动I/O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。\\n本文介绍 Node.js 的安装及环境配置，操作系统为 Windows 10，让我们开始吧！\")])]),e._v(\" \"),s(\"h2\",{attrs:{id:\"_1-下载\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-下载\"}},[e._v(\"#\")]),e._v(\" 1.下载\")]),e._v(\" \"),s(\"p\",[e._v(\"进入官网 \"),s(\"a\",{attrs:{href:\"https://nodejs.org/zh-cn/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[e._v(\"https://nodejs.org/zh-cn/\"),s(\"OutboundLink\")],1),e._v(\"，可以安装 Stable 版本。\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"_2-安装\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-安装\"}},[e._v(\"#\")]),e._v(\" 2.安装\")]),e._v(\" \"),s(\"p\",[e._v(\"安装完成后，简单测试一下安装是否成功。\")]),e._v(\" \"),s(\"p\",[s(\"strong\",[e._v(\"Windows 键 + R\")]),e._v(\"，输入 \"),s(\"strong\",[e._v(\"cmd\")]),e._v(\" ，回车/点击确定打开 cmd 窗口。\")]),e._v(\" \"),s(\"p\",[e._v(\"分别输入 \"),s(\"strong\",[e._v(\"node -v\")]),e._v(\" 和 \"),s(\"strong\",[e._v(\"npm -v\")]),e._v(\"，返回版本号，说明安装成功。\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"_3-环境配置\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-环境配置\"}},[e._v(\"#\")]),e._v(\" 3.环境配置\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"配置npm缓存路径\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置npm缓存路径\"}},[e._v(\"#\")]),e._v(\" 配置npm缓存路径\")]),e._v(\" \"),s(\"p\",[e._v(\"配置 npm 安装的全局模块所在的路径，以及缓存 cache 的路径，防止以后将安装的模块放在 C 盘。\")]),e._v(\" \"),s(\"p\",[e._v(\"这里我选择将模块所在路径和缓存路径放在我 node.js 安装的文件夹中，如下图所示，创建 \"),s(\"strong\",[e._v(\"node_global\")]),e._v(\" 和 \"),s(\"strong\",[e._v(\"node_cache\")]),e._v(\" 文件夹：\")]),e._v(\" \"),s(\"p\",[e._v(\"创建完成，打开 cmd 窗口：\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"输入以下语句，注意路径是你的路径：\")])]),e._v(\" \"),s(\"div\",{staticClass:\"language-text extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v('npm config set prefix \"C:\\\\Program Files\\\\nodejs\\\\node_global\"\\nnpm config set cache \"C:\\\\Program Files\\\\nodejs\\\\node_cache\"\\n')])])]),s(\"blockquote\",[s(\"p\",[e._v(\"该步骤可以选择跳过，则路径如下：\")])]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"C:\\\\Users\\\\zervan\\\\AppData\\\\Roaming\\\\npm\\nC:\\\\Users\\\\zervan\\\\AppData\\\\Roaming\\\\npm-cache\\n\")])])]),s(\"h3\",{attrs:{id:\"安装vue3-0\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#安装vue3-0\"}},[e._v(\"#\")]),e._v(\" 安装vue3.0\")]),e._v(\" \"),s(\"p\",[e._v(\"安装vue3.0指令如下：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"npm install -g vue\\n\")])])]),s(\"p\",[e._v(\"安装vue3.0的过程中如遇到\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"npm ERR! code EPERM\\nnpm ERR! syscall mkdir\\nnpm ERR! path C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\.staging\\nnpm ERR! errno -4048\\nnpm ERR! Error: EPERM: operation not permitted, mkdir 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\.staging'\\nnpm ERR!  [OperationalError: EPERM: operation not permitted, mkdir 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\.staging'] {\\nnpm ERR!   cause: [Error: EPERM: operation not permitted, mkdir 'C:\\\\Program Files\\\\nodejs\\\\node_modules\\\\.staging'] {\\nnpm ERR!     errno: -4048,\\nnpm ERR!     code: 'EPERM',\\nnpm ERR!     syscall: 'mkdir',\\nnpm ERR!     path: 'C:\\\\\\\\Program Files\\\\\\\\nodejs\\\\\\\\node_modules\\\\\\\\.staging'\\nnpm ERR!   },\\nnpm ERR!   errno: -4048,\\nnpm ERR!   code: 'EPERM',\\nnpm ERR!   syscall: 'mkdir',\\nnpm ERR!   path: 'C:\\\\\\\\Program Files\\\\\\\\nodejs\\\\\\\\node_modules\\\\\\\\.staging',\\nnpm ERR!   parent: '@babel/helper-compilation-targets'\\nnpm ERR! }\\nnpm ERR!\\nnpm ERR! The operation was rejected by your operating system.\\nnpm ERR! It's possible that the file was already in use (by a text editor or antivirus),\\nnpm ERR! or that you lack permissions to access it.\\nnpm ERR!\\nnpm ERR! If you believe this might be a permissions issue, please double-check the\\nnpm ERR! permissions of the file and its containing directories, or try running\\nnpm ERR! the command again as root/Administrator.\\n\")])])]),s(\"p\",[e._v(\"则在用户文件夹中删掉.npmrc这个文件夹就解决了。\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"以上两步都可以选择性忽略，下面才是重点\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"配置环境变量\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置环境变量\"}},[e._v(\"#\")]),e._v(\" 配置环境变量\")]),e._v(\" \"),s(\"p\",[e._v(\"进入系统高级属性，选择环境变量：\")]),e._v(\" \"),s(\"p\",[e._v(\"在 系统变量下新建 \"),s(\"strong\",[e._v(\"NODE_PATH\")]),e._v(\"，填写变量名及你的路径。\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"变量名为：NODE_PATH\\n变量值为：C:\\\\Users\\\\zervan\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\n\")])])]),s(\"p\",[e._v(\"在 系统变量下编辑 \"),s(\"strong\",[e._v(\"PATH\")]),e._v(\"，填写 Nodejs 安装路径。\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"C:\\\\Program Files\\\\nodejs\\n%NODE_PATH%\\n\")])])]),s(\"p\",[e._v(\"在 用户变量 下修改 \"),s(\"strong\",[e._v(\"Path\")]),e._v(\" 路径为你的新路径，修改为 node_global (npm)的路径。\")]),e._v(\" \"),s(\"div\",{staticClass:\"language- extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"C:\\\\Program Files\\\\nodejs\\nC:\\\\Users\\\\zervan\\\\AppData\\\\Roaming\\\\npm\\n\")])])]),s(\"h2\",{attrs:{id:\"_4-测试\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-测试\"}},[e._v(\"#\")]),e._v(\" 4.测试\")]),e._v(\" \"),s(\"p\",[e._v(\"配置完后，安装个 module 测试下，我们就安装最常用的 express 模块，打开cmd窗口，输入如下命令进行模块的全局安装。\")]),e._v(\" \"),s(\"p\",[e._v(\"打开 cmd 窗口，输入如下命令：\")]),e._v(\" \"),s(\"div\",{staticClass:\"language-text extra-class\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[e._v(\"npm install express -g     # -g是全局安装的意思\\n\")])])]),s(\"p\",[e._v(\"安装完成\")]),e._v(\" \"),s(\"h2\",{attrs:{id:\"关于node-js\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#关于node-js\"}},[e._v(\"#\")]),e._v(\" 关于node.js\")]),e._v(\" \"),s(\"h3\",{attrs:{id:\"node-js是什么\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#node-js是什么\"}},[e._v(\"#\")]),e._v(\" “node.js是什么？”\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"这是一种通过JavaScript语言开发web服务端的东西\")])]),e._v(\" \"),s(\"h3\",{attrs:{id:\"为什么我们要用node-js\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么我们要用node-js\"}},[e._v(\"#\")]),e._v(\" “为什么我们要用node.js？”\")]),e._v(\" \"),s(\"blockquote\",[s(\"p\",[e._v(\"node.js有非阻塞，事件驱动I/O等特性，从而让高并发（high concurrency）在的轮询（Polling）和comet构建的应用中成为可能。\")])]),e._v(\" \"),s(\"p\",[e._v(\"当浏览器向网站发送请求，服务器接收到了请求，并开始搜寻被请求的资源，同时还会查询一下数据库，最后将响应结果传回浏览器。\")]),e._v(\" \"),s(\"p\",[e._v(\"在传统的web服务器（如Apache）中，每一个请求都会使服务器创建一个新的进程来处理这个请求。\")]),e._v(\" \"),s(\"p\",[e._v(\"在Ajax中，我们可以不需要每次都请求一个完整的新页面。取而代之的是，每次只请求需要的部分页面信息就可以了。\")]),e._v(\" \"),s(\"p\",[e._v(\"但如果你要搭建一个类微博的社交网站，你的好友会随时的推送新的状态。要达成这个需求，我们需要让用户一直与服务器保持一个有效连接。目前最简单的实现方法，就是让用户和服务器之间保持长轮询（long polling）。\")]),e._v(\" \"),s(\"p\",[e._v(\"http是无状态协议，HTTP请求不是持续的连接，每请求一次，服务器响应一次。\")]),e._v(\" \"),s(\"p\",[e._v(\"而长轮询是一种利用HTTP模拟持续连接的技巧。具体来说，只要页面载入了，不管你需不需要服务器给你响应信息，你都会给服务器发一个Ajax请求。ajax是用给http加参数的方式，让他模拟有状态，这样可以让浏览器始终保持等待响应的状态。\")]),e._v(\" \"),s(\"p\",[e._v(\"虽然以上过程依然只有非持续的Http参与，但是我们模拟出了一个看似持续的连接状态\")]),e._v(\" \"),s(\"p\",[e._v(\"我们再看传统的服务器（如Apache）。每当一个新用户连到你的网站上，你的服务器就得开一个连接。\")]),e._v(\" \"),s(\"p\",[e._v(\"每个连接都需要占一个进程，这些进程大部分时间都是闲着的。虽然这些进程闲着，但是照样占用内存。\")]),e._v(\" \"),s(\"p\",[e._v(\"这意味着，如果用户连接数的增长到一定规模，你服务器没准就要耗光内存直接瘫了。\")]),e._v(\" \"),s(\"p\",[e._v(\"这种情况的解决方法就是：\"),s(\"strong\",[e._v(\"非阻塞\")]),e._v(\"和\"),s(\"strong\",[e._v(\"事件驱动\")]),e._v(\"。\")]),e._v(\" \"),s(\"p\",[e._v(\"非阻塞的服务器就是一个loop循环，这个loop会持续进行。当新请求被提出，loop接收请求，并把这个请求传给其他的进程（比如传给一个搞数据库查询的进程），然后响应一个回调（callback），把结果传回用户的浏览器。完成后loop就接着跑，接其他的请求。\")]),e._v(\" \"),s(\"p\",[e._v(\"从而在理论上说，同一时刻的数据库查询数量，以及用户的请求数量就没有限制了。服务器只在用户那边有事件发生的时候才响应，这就是\"),s(\"strong\",[e._v(\"事件驱动。\")])]),e._v(\" \"),s(\"p\",[e._v(\"FriendFeed是用基于Python的\"),s(\"strong\",[e._v(\"非阻塞\")]),e._v(\"框架Tornado 来实现此功能的。\")]),e._v(\" \"),s(\"p\",[e._v(\"Node.js的应用是通过javascript开发的，然后直接在Google的V8引擎上运行。使用Node.js就不用担心用户端的请求会在服务器里运行造成阻塞的代码，因为javascript本身就是事件驱动的脚本语言。\")]),e._v(\" \"),s(\"p\",[e._v(\"你回想一下，在给前端写javascript的时候，更多时候你都是在搞事件处理和回调函数。因此javascript本身就是给事件处理量身定制的语言。\")]),e._v(\" \"),s(\"p\",[e._v(\"Node.js还是处于初期阶段。如果你想开发一个基于Node.js的应用，你应该会需要写一些很底层代码。但是下一代浏览器很快就要采用WebSocket技术了，从而长轮询也会消失。\")]),e._v(\" \"),s(\"p\",[e._v(\"在Web开发里，Node.js这种类型的技术只会变得越来越重要。\")])])}),[],!1,null,null,null);a.default=n.exports}}]);","extractedComments":[]}